PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "schema_migrations" ("version" varchar NOT NULL);
INSERT INTO schema_migrations VALUES('20160712045707');
INSERT INTO schema_migrations VALUES('20160712045739');
INSERT INTO schema_migrations VALUES('20160712052128');
INSERT INTO schema_migrations VALUES('20160712054809');
INSERT INTO schema_migrations VALUES('20160712054810');
INSERT INTO schema_migrations VALUES('20160712054811');
INSERT INTO schema_migrations VALUES('20160712054812');
INSERT INTO schema_migrations VALUES('20160712054813');
INSERT INTO schema_migrations VALUES('20160712055201');
INSERT INTO schema_migrations VALUES('20160712061113');
INSERT INTO schema_migrations VALUES('20160712061614');
CREATE TABLE IF NOT EXISTS "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "sign_in_count" integer DEFAULT 0 NOT NULL, "current_sign_in_at" datetime, "last_sign_in_at" datetime, "current_sign_in_ip" varchar, "last_sign_in_ip" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "username" varchar, "image" varchar, "bio" text);
INSERT INTO users VALUES(1,'florian@marmelab.com','$2a$11$q0uzmHGPe93BvYLELPyN5ujL7u3ELIsIYK6SJYEWQM6MhGhdmvyLK',NULL,NULL,NULL,1,'2021-01-21 10:26:17.892003','2021-01-21 10:26:17.892003','172.28.0.1','172.28.0.1','2021-01-21 10:26:17.865026','2021-01-21 10:26:17.894794','florian',NULL,NULL);
INSERT INTO users VALUES(2,'julien@marmelab.com','$2a$11$Qru5xqTeDgf79b9Q910PhO6hJut4ClzDYqY21JWP270l48OTCG3yu',NULL,NULL,NULL,1,'2021-01-21 10:27:19.725284','2021-01-21 10:27:19.725284','172.28.0.1','172.28.0.1','2021-01-21 10:27:19.700457','2021-01-21 10:27:19.726789','julien',NULL,NULL);
INSERT INTO users VALUES(3,'adrien@marmelab.com','$2a$11$beO0JHGU6XzgWnpiSjKGP.e2NrWg3m.GlGD5POvYLPLEgg311nlYe',NULL,NULL,NULL,1,'2021-01-21 10:27:37.626748','2021-01-21 10:27:37.626748','172.28.0.1','172.28.0.1','2021-01-21 10:27:37.601982','2021-01-21 10:27:37.628326','adrien',NULL,NULL);
INSERT INTO users VALUES(4,'alexis@marmelab.com','$2a$11$4L76uWNv2ak.e6EKeaJYouMrAmIRxf1oOEmIMDdKKF4NiEnF5Cp6e',NULL,NULL,NULL,1,'2021-01-21 10:27:57.137879','2021-01-21 10:27:57.137879','172.28.0.1','172.28.0.1','2021-01-21 10:27:57.111155','2021-01-21 10:27:57.139461','alexis',NULL,NULL);
INSERT INTO users VALUES(5,'benjamin@marmelab.com','$2a$11$hMYVXL44vyVZddVWM8WV8On8UDhXmPPyZcf0ffvA0OYiEYus3bjum',NULL,NULL,NULL,1,'2021-01-21 10:28:18.301618','2021-01-21 10:28:18.301618','172.28.0.1','172.28.0.1','2021-01-21 10:28:18.274180','2021-01-21 10:28:18.303878','benjamin',NULL,NULL);
INSERT INTO users VALUES(6,'matthieu@marmelab.com','$2a$11$M0m.GM6.1uzkcIYSQNo1cu8VZc/D9l6phHrPviI.bLDGqtPabZyXC',NULL,NULL,NULL,1,'2021-01-21 10:28:35.507500','2021-01-21 10:28:35.507500','172.28.0.1','172.28.0.1','2021-01-21 10:28:35.480091','2021-01-21 10:28:35.509061','matthieu',NULL,NULL);
INSERT INTO users VALUES(7,'pierre@marmelab.com','$2a$11$nOzrD0cysS/ggTl4RQaB/ucazZAuWM.Op/X177jaX2j0tDIdyZnJe',NULL,NULL,NULL,1,'2021-01-21 10:28:52.718872','2021-01-21 10:28:52.718872','172.28.0.1','172.28.0.1','2021-01-21 10:28:52.694397','2021-01-21 10:28:52.720395','pierre',NULL,NULL);
CREATE TABLE IF NOT EXISTS "articles" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "slug" varchar, "body" text, "description" varchar, "favorites_count" integer, "user_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
INSERT INTO articles VALUES(1,'test','test-sj40um','test','test',NULL,1,'2021-01-21 16:45:29.293578','2021-01-21 16:45:29.293578');
INSERT INTO articles VALUES(2,'test2','test2-e8pjfs','test2','test2',NULL,1,'2021-01-22 09:16:31.294494','2021-01-22 09:16:31.294494');
INSERT INTO articles VALUES(3,'Au secours, mon poste ne démarre plus !','au-secours-mon-poste-ne-demarre-plus-x6z2q',replace('Mercredi 14 août, 8h50. Je pars de chez moi de bonne humeur : la veille, avec Matthieu, nous avons enfin réussi à résoudre le bug qui nous bloquait depuis quelques jours.\n\nÀ peine dix minutes plus tard j''arrive au bureau confiant. Je salue rapidement mes collègues, j''ouvre le clapet de mon ordinateur, et le démarre.\n\nEt là, première surprise : Linux Mint se lance en mode sans échec. Etonné, je bouge ma souris pour cliquer sur le bouton __redémarrer__.\nMais là, seconde surprise : la souris ne répond pas.\n\nCe seront là les premiers symptômes du problème qui m''amènera plus tard dans la journée à devoir réinstaller tout mon système d''exploitation.\n\nChez marmelab, chaque développeur est responsable de son poste de travail, pour le meilleur... comme pour le pire. J''ai appris grâce à cette histoire comment récupérer mes données les plus importantes (projets, configurations, codes d''accès), mais surtout comment éviter de les perdre à l''avenir.\n\nEt comme il vaut mieux prévenir que guérir, j''ai décidé de partager ce que j''ai appris avec vous.\n\n## Le constat\n\nIl existe mille raisons qui font qu''un ordinateur cesse de fonctionner du jour au lendemain. Rien qu''à marmelab nous en avons rencontré un bon paquet :\n\n- Linux Mint qui ne redémarre pas après un passage en mode hibernation - [Maxime](https://twitter.com/rmaximedev)\n- Installation d''une nouvelle version de linux - [Adrien](https://twitter.com/luwangel)\n- Le fameux `sudo rm -rf /` - [Kévin](https://twitter.com/kmaschta)\n- Son matériel qui lâche, ou quelqu''un qui lâche son matériel - Vous ?\n\nBien évidemment, la liste s''allonge rapidement après quelques recherches sur internet.\n\n![Recherche Google : Pourquoi mon ordinateur](images/search-why-my-computer.png)\n\nQuoi qu''il en soit, lorsqu''on fait face à un tel problème, et comme pour tout, il est nécessaire d''en comprendre la raison.\n\nSans souris, il ne me restait que le clavier. J''ai donc directement ouvert un terminal en tapant le raccourcis `CTRL + ALT + T`.\n\nSuspectant un problème d''installation de Linux que j''avais mis à jour la veille avant de partir, j''ai consulté les logs de la commande `apt`. Ces derniers sont enregistrés dans le fichier `/var/log/apt/term.log`.\n\n<div class="tips">\n\nDe manière générale, on retrouve l''ensemble des logs système dans le dossier `/var/log`. Si vous êtes un peu perdu, n''hésitez pas à consulter l''article suivant sur le wiki de Debian : [Consulter les logs : quoi, où et comment chercher](https://wiki.debian-fr.xyz/Consulter_les_logs_:_quoi,_où_et_comment_chercher). En plus d''être clair et concis, il donne quelques exemples de commandes à lancer pour retrouver exactement ce dont vous avez besoin.\n\n</div>\n\nLa piste à suivre pour détecter de possibles erreurs est de récupérer la version courante du noyau via la commande `uname`, puis de chercher d''éventuels problèmes dans les logs d''installation.\n\nJe n''ai malheureusement pas conservé les données de mon ancien poste, mais voici le résultat de ces commandes lorsque je les lance sur mon système actuel :\n\n```shell-session\nadrien@amo-pc: ~$ uname -msr\nLinux 5.0.0-36-generic x86_64\n\nadrien@amo-pc: ~$ cat /var/log/apt/term.log | grep linux-image-5.0.0-36-generic\nSélection du paquet linux-image-5.0.0-36-generic précédemment désélectionné.\nPréparation du dépaquetage de .../1-linux-image-5.0.0-36-generic_5.0.0-36.39~18.04.1_amd64.deb ...\nDépaquetage de linux-image-5.0.0-36-generic (5.0.0-36.39~18.04.1) ...\nParamétrage de linux-image-5.0.0-36-generic (5.0.0-36.39~18.04.1) ...\nTraitement des actions différées (« triggers ») pour linux-image-5.0.0-36-generic (5.0.0-36.39~18.04.1) ...\n```\n\nÀ ce propos, la commande `dpkg` peut vous être utile puisqu''elle permet de lister les paquets installés.\n\n```shell-session\nadrien@amo-pc: ~$ dpkg --list | grep linux-image\n...\nrc  linux-image-4.15.0-65-generic              4.15.0-65.74                                amd64        Signed kernel image generic\nrc  linux-image-4.15.0-66-generic              4.15.0-66.75                                amd64        Signed kernel image generic\nii  linux-image-4.15.0-70-generic              4.15.0-70.79                                amd64        Signed kernel image generic\n...\nii  linux-image-5.0.0-32-generic               5.0.0-32.34~18.04.2                         amd64        Signed kernel image generic\nii  linux-image-5.0.0-36-generic               5.0.0-36.39~18.04.1                         amd64        Signed kernel image generic\nii  linux-image-generic                        4.15.0.70.72                                amd64        Generic Linux kernel image\nii  linux-image-generic-hwe-18.04              5.0.0.36.94                                 amd64        Generic Linux kernel image\n```\n\nAu final, l''étude des logs a confirmé mon intuition : le problème venait bien d''une mise à jour du système ratée.\nNe restait plus qu''à réinstaller proprement le paquet en question.\n\n## L''astuce de la clef USB exécutable\n\nJ''ai naturellement commencé par lancer un petit `sudo apt update`, mais je n''ai pas vraiment aimé ce que j''ai vu.\n\n```shell-session\nErr :1 http://security.ubuntu.com/ubuntu bionic-security InRelease\n  Ne parvient pas à résoudre « security.ubuntu.com »\n\nW: Impossible de récupérer http://fr.archive.ubuntu.com/ubuntu/dists/bionic/InRelease  Ne parvient pas à résoudre « fr.archive.ubuntu.com »\n\nW: Le téléchargement de quelques fichiers d''index a échoué, ils ont été ignorés, ou les anciens ont été utilisés à la place.\n```\n\nPour faire simple : en mode sans échec ma carte réseau était coupée, et je n''ai pas trouvé le moyen de la réactiver. J''ai également essayé de brancher une clef usb qui contenant le paquet en question, mais elle n''était pas reconnue par le système.\n\nMon problème s''est donc complexifié puisqu''il fallait désormais que je puisse restaurer une version du noyau linux sans internet et accès externe à la machine.\n\nMon salut est venu de Kévin qui m''a aiguillé vers la bonne solution : utiliser une **version live d''ubuntu** installée sur une clef USB exécutable pour accéder au système depuis l''extérieur.\n\nEn effet, malgré un système d''exploitation bien endommagé, le disque dur était totalement fonctionnel. Rien ne nous empêchaît alors de lancer un second système d''exploitation sur la même machine, qui aurait pour unique but de réparer le système endommagé.\n\nPour les amateurs de Star Wars, c''est un peu comme lorsque R2D2 se branche au système d''un vaisseau pour redistribuer la puissance de ses moteurs.\n\n![R2D2 se branche au système d''un vaisseau dans Star Wars](images/r2d2.jpg)\n\nLa manipulation un peu spéciale que je viens de vous décrire se fait via le **chrooting**. Derrière ce nom barbare se cache une opération qui permet de changer le répertoire racine du processus courant. Elle s''effectue à l''aide de la commande `chroot`, qui signifie **change root**.\n\n<div class="blue-box">\n\n### Le petit guide du chrooting\n\nA. Préparation\n\n1. Se munir une clef USB\n2. Installer dessus une [version live d''ubuntu](https://doc.ubuntu-fr.org/live_usb)\n3. La Sélectionner à la place du système d''exploitation d''origine lors du démarrage la machine\n\nB. Réalisation\n\n1. Repérer l''emplacement du dossier cible\n2. Créer un point de montage\n3. Accéder au disque dur via la commande `chroot`\n\n</div>\n\nEn suivant ces instructions, j''ai donc lancé les commandes suivantes sur ma machine :\n\n```bash\nubuntu@ubuntu: ~$ mkdir mnt\nubuntu@ubuntu: ~$ sudo mount /dev/mint-vg/root /home/ubuntu/mnt\nubuntu@ubuntu: ~$ sudo chroot /home/ubuntu/mnt\n```\n\nEt voilà, la magie a opéré ! J''avais désormais accès à mon ancien disque dur, mais cette fois-ci avec un système d''exploitation sain, et bien sûr internet (la version live d''ubuntu n''étant pas en mode sans échec).\n\n## Adieu Linux Mint, bonjour Ubuntu\n\nMalheureusement dans mon cas, j''ai vite été bloqué. En effet, linux n''acceptait pas que j''installe des dépendances système à cause de problèmes de droits insolubles 😢. Ayant déjà perdu deux bonnes heures, j''ai décidé de ne pas passer plus de temps à essayer de résoudre ce problème.\n\nJ''ai quand même réussi à sauvegarder l''essentiel : mes fichiers de conf `aws`, `ssh`, ainsi que pas mal de petits projets que je n''avais pas pris le temps de publier sur Github.\n\n<div class="tips">\n\nVous ne savez pas quoi sauvegarder ? Commencez par lister les dossiers de votre répertoire principal à l''aide de la commande `ls - lash ~/`.\n\nEn voici quelques uns que vous ne voudrez pas perdre :\n\n```shell-session\ndrwxr-xr-x  2 adrien adrien 4,0K août  19 15:34 .aws\ndrwx------ 26 adrien adrien 4,0K oct.  16 11:54 .config\n-rwxrwxrwx  1 adrien adrien  363 août  20 14:50 .gitconfig\ndrwx------  3 adrien adrien 4,0K oct.   4 11:31 .ssh\n-rwxrwxrwx  1 adrien adrien 2,0K sept. 17 09:48 .zsh_aliases\n-rw-r--r--  1 adrien adrien 3,5K août  15 22:07 .zshrc\n```\n\n</div>\n\n11h55. Tout est sauvegardé. Je lance alors l''installation d''ubuntu en cliquant, non sans trembler, sur le bouton **Erase disk, and install ubuntu**.\n\n![Message d''alerte : écraser le disque et installer ubuntu](images/ubuntu-install.png)\n\nMa pause repas a finalement été concacrée à la réinstallion de tout mon système, et j''ai pu reprendre un projet client dès l''après-midi. L''histoire se termine bien.\n\n## Conclusion\n\nTout cette histoire s''est passée il y a quelques mois, et même si j''en rigole aujourd''hui, j''étais assez stressé en découvrant l''état de mon ordinateur. Je ne savais pas ce qu''il se passait, ni combien de temps j''aurais besoin pour retrouver un système sain. Je pensais également devoir tirer un trait sur plusieurs fichiers de configuration sur mesure, mais aussi sur pas mal de petits projets non publiés.\n\nIl faut être honnête, je ne m''étais pas préparé du tout à ça. Mais maintenant que ça m''est arrivé, j''ai bien pris la mesure du problème et on ne m''y reprendra pas.\n\nIl s''agit d''un sujet qu''**on néglige trop souvent**. C''est pourquoi j''ai mis en place des stratégies pour pouvoir **réinstaller facilement mon poste**.\n\nEt ça tombe bien car nous en parlerons dans un prochain article.\n\n## Bonus\n\n<div class="blue-box">\n\n### Matériel de survie d''un développeur\n\nToujours avoir dans son sac :\n\n- Une clef USB avec une version live d''ubuntu\n- Une seconde clef USB, ou un disque dur externe qui servira à sauvegarder des données\n- Un téléphone 4G avec partage de connexion, ou un wifi accessible\n- Kévin Maschtalek\n\n</div>\n','\n',char(10)),'On connaît tous ce collègue qui, un matin, s''est retrouvé face à un écran noir. La plupart du temps, il suffit d''appeler le service support de l''entreprise. Mais chez nous, chaque dévelopeur est responsable de sa machine. Voilà comment nous gérons ça.',NULL,1,'2021-01-22 10:36:32.735636','2021-01-22 10:37:47.952123');
INSERT INTO articles VALUES(4,'Créer et publier une application web sur Linux grâce aux snaps','creer-et-publier-une-application-web-sur-linux-grace-aux-snaps-uydzv4',replace('Les stores d''application (App Store, Google Play) facilitent la distribution et la mise à jour des applications mobiles. Les OS desktop leur ont emboité le pas, et même Ubuntu propose aujourd''hui son store. Y publier son application web, c''est aussi permettre à un plus grand nombre possible d''utilisateurs d''y accéder.\n\nAujourd''hui, il existe les dépôts APT pour développer et mettre en avant son projet. Je me suis aperçu que cela n''est pas simple à concrétiser, mais grâce à l''annonce du projet Snappy par Canonical en 2016, la publication de cette application peut être facilement réalisée.\n\nJ''ai choisi d''illustrer ce tutoriel en utilisant le jeu du Morpion, que j''ai développé il y a quelque temps avec React. Vous pouvez retrouver le code source sur [github.com/zyhou/morpion-snap](https://github.com/zyhou/morpion-snap) ainsi que le projet sur le store [snapcraft.io/morpion](https://snapcraft.io/morpion).\n\n<img src="./images/tictactoe.gif" alt="Play game"/>\n\nEn exécutant la commande `snap install morpion`, vous pouvez dès à présent installer le jeu du morpion et y jouer. Comment ça marche, et comment vous pouvez-vous publier vos propres applications web sur le snap store?\n\n## Snappy et les paquets snap\n\nSnappy est un gestionnaire de paquets qui permet de distribuer les `.snap`. Un snap inclut l''application ainsi que les librairies qui lui permettent de fonctionner. Snap vient ainsi unifier l''installation des applications sur l''écosystème linux. Snap fonctionne de la même manière sur toutes les distributions.\n\nCanonical n''a pas oublié les développeurs. Ils ont créé [snapcraft](https://snapcraft.io), un outil pour créer et publier des snaps. Fin 2018, ils ont sorti la [version 3.0](https://github.com/snapcore/snapcraft/releases/tag/3.0) qui simplifie le fichier `snapcraft.yaml` et annonce le support de MacOS à travers homebrew.\n\nVous pouvez obtenir plus d''informations sur l''installation et la définition d''un snap sur [la documentation d''Ubuntu](https://doc.ubuntu-fr.org/snap) et [sur le site de snapcraft](https://docs.snapcraft.io/getting-started/3876).\n\n## Créer un fichier snap\n\nSnapcraft propose [plusieurs langages](https://snapcraft.io/first-snap) pour créer votre premier snap. Dans le cas présent, j''ai une application web que j''ai voulu convertir en `.snap`. Pour faire cela, j''ai utilisé [Electron](https://electronjs.org/), qui embarque l''application, et [electron-builder](https://www.electron.build/), qui permet de compiler un exécutable pour différentes platformes comme macOS, Windows et Linux (apk, deb, snap).\n\n### Architecture du projet\n\nVoici l''arborescence de l''application web de départ. Le dossier `src` contient les sources compilées du [Morpion](https://github.com/zyhou/morpion-react) que j''ai crée.\n\n```\n├── assets\n│   └── icon.png\n├── src\n│   ├── main.js\n│   └── index.html\n├── index.js\n└── package.json\n```\n\nL''étape suivante est l''installation d''Electron : il faut renseigner les différentes informations de l''application. Pour ce faire, il est nécessaire de modifier `package.json`.\n\n```diff\n{\n  "name": "morpion",\n  "version": "0.0.1",\n  "description": "Jeu du Morpion",\n  "main": "index.js",\n+ "scripts": {\n+   "start": "electron .",\n+   "build": "build --linux snap"\n+ },\n+ "devDependencies": {\n+   "electron": "4.0.7",\n+   "electron-builder": "20.38.5"\n+ },\n+ "build": {\n+   "directories": {\n+     "buildResources": "assets/"\n+   },\n+   "linux": {\n+     "category": "Game",\n+     "target": ["dir"]\n+   }\n+ }\n}\n```\n\nOn peut y voir deux commandes:\n\n- `start` lance le fichier `index.js` qui crée une application Electron\n- `build` génère le snap à partir de l''application Electron.\n\nOn y voit aussi une partie `build` qui sert pour la customisation du snap. Il permet d''ajouter une [icône](https://www.electron.build/icons) et de définir [la catégorie](https://www.electron.build/generated/linuxtargetspecificoptions) sur le store.\n\n### Création de l''application Electron\n\nDans le fichier `index.js`, il faut créer une fenêtre d''application grâce à Electron, et charger le Morpion qui se trouve dans `src/index.html`.\n\n```js\nconst { app, BrowserWindow } = require("electron");\n\nlet mainWindow;\n\nconst createWindow = () => {\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      nodeIntegration: false\n    }\n  });\n\n  mainWindow.setMenuBarVisibility(false);\n  mainWindow.loadFile("src/index.html");\n\n  mainWindow.on("closed", () => {\n    mainWindow = null;\n  });\n};\n\napp.on("ready", createWindow);\n```\n\nA partir de cette étape du tutoriel, vous pouvez lancer l''application Electron et générer le fichier snap.\n\n```bash\nnpm run start\n\nnpm run build\n```\n\nVous pouvez retrouver le `.snap` dans le dossier `/dist`.\n\n### Tester avant publication\n\nComme tout développeur qui se respecte, j''ai du tester mon snap en local avant de l''envoyer sur le store. Rien de plus simple, il suffit de l''installer avec l''option `--dangerous` qui permet de passer la vérification de la signature.\n\n```bash\nsnap install ./dist/morpion_0.0.1_amd64.snap --dangerous\n\n## Vous devez voir l''application dans la liste des applications installés\nsnap list\n\n## Permet de lancer le jeu\nmorpion\n```\n\n## Publier son snap\n\nTout d''abord, il faut créer un compte sur [snapcraft.io](https://snapcraft.io/account) et enregistrer l''application à l''aide du bouton "Register a snap name" qui se trouve sur [la page d''accueil](https://snapcraft.io/snaps).\n\n```bash\n## Installer snapcraft\nsnap install --classic snapcraft\n\n## S''identifier avec son compte snapcraft\nsnapcraft login\n\n## Publier notre snap sur le store\nsnapcraft push ./dist/morpion_0.0.1_amd64.snap\n```\n\nLe snap a bien été envoyé sur le store mais il n''est pas encore disponible. Il faut créer une release sur Snapcraft.\n\n<img src="./images/snap-wait-release.png" alt="Snapcraft waiting release" />\n\nVous pouvez retrouver l''application du Morpion sur le store [snapcraft.io](https://snapcraft.io/morpion), nous remarquons qu''il existe plusieurs versions.\n\n<img src="./images/snap-release.png" alt="Snapcraft release" />\n\n## Conclusion\n\nComme je l''ai expliqué dans ce tutoriel, on peut aisément convertir une application web en application Electron et ensuite générer un snap. La publication se fait facilement grâce à l''utilisation de snapcraft.\n\nSnapcraft n''est pas encore au niveau de Google Play ou d''Apple, cependant il permet tout aussi bien d''avoir des métriques d''utilisations de l''application et de créer des badges pour mettre en avant son application.\n\nLes dépôts snap sont très récents, contrairement à apt-get. De ce fait, il y encore peu de snap sur ce store. Lancez vous!\n','\n',char(10)),'Les stores d''application facilitent la distribution et la mise à jour des applications. Grâce aux snaps, c''est aussi possible sur Ubuntu.',NULL,1,'2021-01-22 10:37:28.285163','2021-01-22 10:37:28.285163');
INSERT INTO articles VALUES(5,'What Can React Developers Learn From The Vue.Js Ecosystem?','what-can-react-developers-learn-from-the-vue-js-ecosystem-d4uaky',replace('Last winter, for the first time, we attended the [Vue.Js Amsterdam](https://vuejs.amsterdam) conference. This may sound weird because there are tons of articles about React in this blog, but none about Vue. It''s true, we love React, but we also love other technologies like Reason, TypeScript, PostgreSQL and AngularJS... Hum, maybe no longer AngularJS. We''ve kept an eye on Vue for a long time. However we''ve never really tried it. Going to this conference was our first step into the Vue community.\n\nDuring these two days, we had a great overview of all the aspects of the framework. Everything was interesting. We learned a lot, and not only about Vue related things. To be honest, we first named this article "Front End Love in Amsterdam 2019: The Perfect Vuelentine''s day".\n\n![JulienM at VueJs](./images/julienm.jpg)\n\nHere is our feedback, theme by theme, with a special focus on accessibility and performances.\n\n## The State of Vue.Js\n\n[Evan You](https://twitter.com/youyuxi), the creator of Vue, started the conference with an introduction about the state of Vue in 2019. He mentioned some impressive figures. Vue has almost 700 000 weekly active users, and more than 3.3 million downloads a month on [npm](https://www.npmjs.com/package/vue).\nAs a comparison, Angular was [half as popular](https://npm-stat.com/charts.html?package=angular&from=2018-01-01&to=2018-12-31) for the same period of time. And Vue only had [2 million download in the whole 2016 year](https://medium.com/the-vue-point/vue-in-2016-8df71d98bfb3).\n\nYou can watch his talk on Youtube.\n\n<Youtube id="zB3HOejXqwk"/>\n\nAfter focusing on Vue CLI last year, the Vue team is back to the core. They released the [2.6 version](https://github.com/vuejs/vue/releases/tag/v2.6.0) "Macross" a few days before the conference. They improved both the syntax and the performance of slots.\n\nFor Vue novices, `<slot>` are used to compose components. Slots can contain any template code, including HTML. In React, we use the prop `children`.\n\nYou can now use named slots like in this example:\n\n```jsx\n// in Footer.vue\n<template>\n    <footer>\n        <div class="links">\n            <slot name="links"/>\n        </div>\n        <div class="legal">\n            <slot name="legal"/>\n        </div>\n    </footer>\n</template>\n\n// in App.vue\n<Footer>\n    <template v-slot:links>\n        <a href="https://twitter.com/Luwangel">@Luwangel</a>\n        <a href="https://twitter.com/YavaDeus">@YavaDeus</a>\n    </template>\n    <template v-slot:legal={data}>\n        <span>@2019 - Marmelab</span>\n    </template>\n</Footer>\n```\n\nThere are a lot of changes in this version. They are all mentioned in [the official post](https://medium.com/the-vue-point/vue-2-6-released-66aa6c8e785e) on medium.\n\nFor now, the team focuses on the v3.0, which should be released later this year. Some notable changes are coming:\n\n- Rewrite everything in TypeScript\n- Less code for Vue core: from 20KB to 10KB gzipped\n- Use native es2015 (without polyfills) in supported browsers\n\nWe can expect many other changes. So, stay tuned!\n\n## SSR and Static Pages with Nuxt.js\n\nServer-Side Rendering (SSR) was one of the main subjects of the conference. Many speakers like [Guillaume Chau](https://twitter.com/Akryum), [Gregg Pollack](https://twitter.com/greggpollack) or [Sébastien Chopin](https://twitter.com/atinux) gave a talk about it. Two days isn''t enough to go around the subject, but let''s try to summarize our learnings.\n\nDuring [the Marmelab integration process](https://marmelab.com/blog/2018/09/05/agile-integration.html), we often use [next.js](https://github.com/zeit/next.js) to perform SSR with React. It was the case in the [15 Puzzle](https://marmelab.com/blog/2018/02/07/jeu-du-taquin-en-react.html#le-server-side-rendering-et-nextjs), and also in [Awale](https://marmelab.com/blog/2017/04/07/awale-isomorphic.html). Powered by Zeit, next.js is the easiest SSR solution for React.\n\nBut Vue is not to be outdone, because they have [nuxt.js](https://github.com/nuxt/nuxt.js). Launched as a copy of next.js, it''s now a great alternative for Vue users. We heard a lot about it. [Gregg Pollack](https://twitter.com/greggpollack) explained how to setup a nuxt.js app from scratch. And its creator, [Sébastien Chopin](https://twitter.com/atinux), gave us a preview of what will come this year.\n\nWe liked the possibility to generate an HTML file for each route using the `nuxt generate` command. We particularly liked the `prefetch links` feature. In fact, it''s possible to preload all the pages the user may navigate to. To do that, the framework detects and fetches links visible in the viewport. Thanks to that feature, when the user clicks to follow a link, the new page shows instantly.\n\nNuxt.js was one of our best discovery: both simple and powerful. We''ll give it a try for sure.\n\n## Improve Performance With Lazy-Loading\n\nWe always want to add more and more features to our apps. As a result, they take more time to load. And the more time an app takes to load, the more you are at risk of losing users. Don''t panic, there are solutions to have complex but fast apps.\n\nOne of them is to use tools you already have under your belt:\n\n- [Vue CLI](https://cli.vuejs.org/): to build an app in 30 seconds.\n- [Vue Router](https://router.vuejs.org/): to manage app routes in the simplest and most efficient way possible.\n\nThat''s what [Eduardo San Martin Morote](https://twitter.com/posva) explained in his great talk about Lazy Loading.\n\nThe golden rule is to always lazy-load routes, like in the following example.\n\n```js\nconst Amsterdam = () => import("./Amsterdam.vue");\n\nconst router = new VueRouter({\n  routes: [{ path: "/amsterdam", component: Amsterdam }],\n});\n```\n\nTo sum up, you should lazy-load:\n\n- Local component registration\n- Routes declaration (always)\n- Other stuff not needed up-front\n\n## Visualizations Using SVG, Canvas, and WebGL\n\nSVG elements are just HTML elements, and Vue can handle them. One of the best examples is the visualization tool inside the Vue CLI.\n\n![Vue.Js UI Analyzer](https://cli.vuejs.org/ui-analyzer.png)\n\nBut SVGs are also slow, and you know how much performance is important.\n\nWhen manipulating SVG, we often remove elements from the DOM in order to hide them. But it''s an error, performance-wise.\n\nThe following sentence from [Chris Fritz](https://twitter.com/chrisvfritz) summarizes the solution very well:\n\n> Hide elements that should not be rendered, rather than frequently adding/removing them.\n\nThe best way to do it is to use the `v-show` property.\n\n```jsx\n<template>\n    <svg :width="windowWidth" :height="windowHeight">\n      <g v-for="(row, rowIndex) in grid" :key="rowIndex">\n            <rect\n                v-for="(cell, colIndex) in row"\n                v-show="cell"\n                :key="colIndex"\n                :x="colIndex * cellSize"\n                :y="rowIndex * cellSize"\n                :width="cellSize"\n                :height="cellSize"\n            ></rect>\n        </g>\n    </svg>\n</template>\n```\n\nBut there is a faster solution using Canvas and WebGL. For Chris, the explanation is simple: they are not XML-based.\n\n```jsx\n<template>\n    <canvas\n        ref="canvas"\n        :width="windowWidth"\n        :height="windowHeight"\n    />\n</template>\n```\n\nYou can find more details in [his slides about Canvas and WebGL](https://fritz.netlify.com/slides/viz-in-vue/).\n\n## Accessibility: Some Rules to Build a Good UI\n\nThe Vue community is taking accessibility seriously, and we had several talks on this subject. Let''s review some of their best advices.\n\n### Colors and Media\n\nWe discovered the achromatopsia, the deuteranopia, and many more scary names. If they mean nothing to you, you should know they are all related to [color blindness](https://en.wikipedia.org/wiki/Color_blindness). The Web always deals with many colors, and it''s one of the biggest accessibility issues.\n\n![Color Blindness Example with Red and Green Apples](./images/apples.jpg)\n\nSome rules to help address these users:\n\n- To face **Light Sensitivity**, you should provide a dark mode.\n\nThis could be done using css.\n\n```css\nfilter: invert(1);\n```\n\n- To face **Contrast Sensitivity**, you should not display a white text on a light background.\n\nThis could also be done using css.\n\n```css\nimg {\n  filter: brightness(60%);\n}\n```\n\n- To face some other issues like **achromatopsia**, there is no css solution 😞. You should provide alt tags, and pay attention to color combination.\n\n```html\n<img src="image.png" alt="Mix of red And green apples" />\n```\n\nIt''s also possible to play with textures to distinguish for example Red from Green Apples. In our opinion, this is a costly operation, which should be done only if it''s necessary.\n\n### Be Intuitive\n\nColors are not the only problem, elements design and order are important, too. This will help screen readers interpret the website correctly. It could be summed up with some basic rules:\n\n- Use HTML semantics wisely\n\nUse a `<button>` for a button, and not a `<div>` with an `onclick` callback.\n\n- The screen reader will read text inside `<a>` tags.\n\n**❌ Don''t write**:\n\n```html\n<p>Click <a href="#2">here</a> to open Marmelab''s blog</p>\n```\n\n**✔ Prefer**:\n\n```html\n<p>You can find <a href="#1">more content on Marmelab''s blog</a></p>\n```\n\n- An icon is better than 1000 words: **be intuitive**.\n\n### Use Tools\n\nIt''s difficult to take care of accessibiilty without proper tooling. Some tools are useful:\n\n- [axe-core library](https://github.com/dequelabs/axe-core)\n- [NoCoffee Vision Simulator Chrome Extension](https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl)\n- [Lighthouse Check](https://developers.google.com/web/tools/lighthouse)\n\n## Complete List Of Talks\n\nThese two days were intense, and we didn''t speak about everything. But, we listed for you all speakers and conferences.\n\n### Day 1\n\n- [State of the Vuenion](https://www.youtube.com/embed/zB3HOejXqwk) by [Evan You](https://twitter.com/youyuxi)\n- [SSR revolution with Vue 2.6](https://slides.com/akryum/vue-26-ssr-revolution) by [Guillaume Chau](https://twitter.com/Akryum)\n- Vue.js for L''oreal, a case study by [Tim Benniks](https://twitter.com/timbenniks)\n- [NativeScript-Vue + ML = The Great MiniBar Challenge: MixoLogy](https://slides.com/telerikdevrel/minibar) by [Jen Looper](https://twitter.com/jenlooper)\n- [Modern Web Apps Performance Tricks with PWA and Vue.js](https://www.slideshare.net/FilipRakowski/performance-optimization-of-vuejs-apps-with-modern-js) by [Filip Rakowski](https://twitter.com/filrakowski)\n- [GraphQL + Apollo + Vue.js = Magic](https://vue-apollo-magic.now.sh/) by [Sara Vieira](https://twitter.com/NikkitaFTW)\n- [Media for everyone - how to make your Vue Apps accessible for all users](https://www.slideshare.net/dpnminh/m16y-how-to-make-your-media-accessible-for-all-users) by [Maya Shavin](https://twitter.com/MayaShavin)\n- [Desktop Applications with Vue](https://www.slideshare.net/NataliaTepluhina/desktop-apps-with-vue) by [Natalia Tepluhina](https://twitter.com/N_Tepluhina)\n- [Designing Components in Vue](https://github.com/shentao/composing-components) by [Damian Dulisz](https://twitter.com/DamianDulisz)\n  Latest news on Vue Vixens by [Natalia Tepluhina](https://twitter.com/N_Tepluhina) & [Jen Looper](https://twitter.com/jenlooper)\n- [Full Stack Vue in the Era of Serverless Computing](https://www.dropbox.com/sh/2m6o3ba1i9hra1n/AABkIpgBA5jXW5jz-cTKCxJja?dl=0) by [Nader Dabit](https://twitter.com/dabit3)\n- Phenomenal design patterns in Vue using Vuex with Spiders by [Jacob Schatz](https://twitter.com/jakecodes)\n\n### Day 2\n\n- [How to craft a Vue CLI Plugin](https://slides.com/akryum/create-a-vue-cli-plugin) by [Guillaume Chau](https://twitter.com/Akryum)\n- Static Site Generation is Awesome by [Alex Kyriakidis](https://twitter.com/hootlex) and [Rolf Haug](https://twitter.com/rahaug)\n- Everything''s a plugin: Understanding webpack from the inside out by [Sean Larkin](https://twitter.com/TheLarkInn)\n- [Make your Vue apps Lighter by being lazy](https://slides.com/posva/making-your-vue-apps-faster-by-being-lazy) by [Eduardo San Martin Morote](https://twitter.com/posva)\n- [Vue CLI – How to write components with it](https://github.com/LinusBorg/talks/tree/master/2019-02-15%20Vue.js%20Amsterdam) by [Thorsten Linusborg](https://twitter.com/Linus_Borg)\n- [Empowering Vue with TypeScript, Inversify, Vuex and some other super tools.](https://www.slideshare.net/CKGrafico/empowering-vue-with-typescript-inversify-vuex-and-some-other-super-tools-131901058) by [Quique Fernandez Guerra](https://twitter.com/CKGrafico)\n- Introduction to Nuxt.js - Nuxt explained Visually by [Gregg Pollack](https://twitter.com/greggpollack)\n- Nuxt.js 2019 by [Sébastien Chopin](https://twitter.com/atinux)\n- Next Level Jest Testing with Vue.js by [Roman Kuba](https://twitter.com/Codebryo)\n- [How we learned the hard why following a flux pattern matters and how to avoid other mistakes in state management](https://slides.com/filipalacerda/vuejs-amsterdam) by [Filipa Lacerda](https://twitter.com/FilipaLacerda)\n- Accessibility with Vue.js by [Callum Macrae](https://twitter.com/callumacrae)\n- [Visualizations using SVG, Canvas, and WebGL in Vue](https://fritz.netlify.com/slides/viz-in-vue/) by [Chris Fritz](https://twitter.com/chrisvfritz)\n\n## Conclusion\n\nAfter these two days, we can only say one thing: The Vue community is amazing. We came to this conference with just a limited knowledge about the framework, but it was enough to understand most of it.\n\nWe were happy to discover that the Vue community is focusing on the same topics as the React community: lazy loading, performance, SSR and accessibility.\n\nAll our tech-thoughts are now focused on one thing: how to convince the rest of Marmelab to use Vue? This will be hard because React has hooks now... But we are motivated enough to bring you more content about Vue this year.\n\nLet''s end with a little poetry:\n\n> Angular is Red,\n> React is Blue.\n> All are great,\n> Including Vue ❤.\n\nWe obviously want to thank the whole team who organized this event, and of course all the speakers. See you soon!\n','\n',char(10)),'For the first time, marmelab developers attended the European VueJs conference. Read on to discover what we learned!',NULL,1,'2021-01-22 10:53:54.955820','2021-01-22 10:53:54.955820');
INSERT INTO articles VALUES(6,'Build Augmented Reality Applications With React-Native','build-augmented-reality-applications-with-react-native-nfp9xs',replace('Augmented Reality is one of the most important trends currently. So, after [our trial using the browser](https://marmelab.com/blog/2017/06/19/augmented-reality-html5.html) over 1 year ago, I wanted to test a framework offering the possibility to **create native augmented reality experiences**. Read on to see how I developed a reversi game application on mobile using React-Native.\n\n<Vimeo id="316986012"/>\n\n## What is Augmented Reality?\n\nAs the "Artificial Intelligence" term can be mixed up with other related concepts, **Augmented Reality** (AR) is quite often mistaken with **Virtual Reality** (VR). In fact, **VR** and **AR** are not the same at all. While VR is a projection of a virtual world to our eyes, AR is a *blended* projection of a virtual object in the real world.\n\nI invite you to check a more detailed description of these concepts in our previous blog post about [AR in the browser](https://marmelab.com/blog/2017/06/19/augmented-reality-html5.html#what-is-augmented-reality).\n\n## Augmented Reality In Javascript With Native Performance\n\nAt Marmelab, we are absolute fans of React and its ecosystem. That''s why we develop [a lot of open-source tools](https://github.com/marmelab/) and [projects](https://marmelab.com/fr/showcase/) for our customers using this technology.\n\nI don''t pretend to be a good Java, Kotlin, CSharp or Swift developer. But I also want to have good performance on mobile, so using a web framework like React is out of the question. So I started looking for a native framework which lets me develop iOS and Android apps with both Javascript and React.\n\n<img src="./images/viro.png" class="responsive" alt="Viro" />\n\nAfter several minutes of research, the only obvious choice was to use [ViroReact](https://viromedia.com/viroreact). Under the hood, this framework is based on two APIs that dominate the world of Augmented and Virtual Reality for mobile phones: **ARKit for iOS** and **ARCore for Android**.\n\n**ARKit** is actually the biggest existing AR platform. It allows to develop rich immersive experiences on Apple devices having at least an A9 chip and iOS 11.\n\n**ARCore** is more or less the same, except that it supports a [short list of devices](https://developers.google.com/ar/discover/supported-devices) that are considered to be powerful enough to run the API at its best. And also iOS devices, [apparently?](https://developers.google.com/ar/develop/ios/overview).\n\nThe rather limited support of devices is the major weakness of these APIs for the moment. Over time, phones will become more and more powerful, which will make it possible to use them more often.\n\n## Viro, The Outsider\n\nViro is a free AR/VR development platform that allows building cross-platform applications using React-Native, and fully native Android applications using Java. It supports multiple platforms and APIs such as ARKit, ARCore, Cardboard, Daydream or GearVR.\n\n<img src="./images/viro-devices.png" class="responsive" alt="Viro Supported Platforms" />\n\nAs previously said, Viro allows building both fully native application and React-Native ones. That''s why Viro provides two distinct packages: [ViroCore](https://virocore.viromedia.com/) and [ViroReact](https://docs.viromedia.com/).\n\n~~**To use it, you''re still required to sign up**. The API key which is provided following registration is mandatory to be able to use the platform.~~\n\n~~Sadly, **Viro is not open-source but (only) free to use** with no limits on distribution. According to the ViroMedia CEO, the API key is used for internal analytics and to guard against possible [license](https://docs.viromedia.com/docs/license) violations.~~\n\n<blockquote><s>VIRO reserves the right, at any time, to modify, suspend, or discontinue the Software, or change access requirements, with or without notice.</s></blockquote>\n\n~~Regarding the license note above, it is therefore necessary to remain vigilant regarding its use since **we have no guarantee on the evolution of the platform**.~~\n\nEdit: Since the 16 Oct 2019, [Viro is becoming open-source](https://blog.viromedia.com/viro-is-going-open-source-be9da0b43328)! No need to register a special API Key to use it. Feel free to contribute, this project is great and we must maintain it anyway.\n\n## First Contact With ViroReact\n\nIn this section, I''ll cover the major parts of the Viro Framework with a simple use case: a 3D projection of the Marmelab logo !\n\n<Youtube id="cxT63CxU-ag"/>\n\nFirst, we need to create a 3D mesh to be able to include it in our project. Special thanks to [@jpetitcolas](https://github.com/jpetitcolas) who created the Marmelab logo using blender a few years ago.\n\n### Installation\n\nBefore using Viro, we need to install some npm dependencies. Viro requires `react-native-cli` and `react-viro-cli` as global packages.\n\n```bash\nnpm install -g react-native-cli\nnpm install -g react-viro-cli\n```\n\nThen, we can initialize a Viro project using the special command `react-viro init`, followed by the project name. A folder with the same name is then created.\n\n```bash\nreact-viro init marmelab_for_real\n```\n\nSo, what can we see in this project? Well, the folder structure is quite similar to the usual ones we encounter with React-Native, no surprise on this point.\n\n```bash\n├── android\n├── bin\n├── ios\n├── js\n├── node_modules\n├── App.js\n├── app.json\n├── index.android.js\n├── index.ios.js\n├── index.js\n├── metro.config.js\n├── package.json\n├── rn-cli.config.js\n├── setup-ide.sh\n└── yarn.lock\n```\n\n### Developer Experience\n\nOnce the project is initialized, we just have to launch it using the `npm start` command. Viro will automatically create an [ngrok tunnel](https://ngrok.com/), which can be used by any phone connected to the internet around the globe.\n\n```bash\njulien@julien-laptop /tmp/foo $ npm start\n\n> foo@0.0.1 prestart /tmp/foo\n> ./node_modules/react-viro/bin/run_ngrok.sh\n\n ----------------------------------------------------------\n|                                                          |\n| NGrok Packager Server endpoint: http://32a5a3d7.ngrok.io |\n|                                                          |\n ----------------------------------------------------------\n\n> foo@0.0.1 start /tmp/foo\n> node node_modules/react-native/local-cli/cli.js start\n\n┌──────────────────────────────────────────────────────────────────────────────┐\n│                                                                              │\n│  Running Metro Bundler on port 8081.                                         │\n│                                                                              │\n│  Keep Metro running while developing on any JS projects. Feel free to        │\n│  close this tab and run your own Metro instance if you prefer.               │\n│                                                                              │\n│  https://github.com/facebook/react-native                                    │\n│                                                                              │\n└──────────────────────────────────────────────────────────────────────────────┘\n```\n\nTo access the application, we just have to use the special [TestBed application](https://play.google.com/store/apps/details?id=com.viromedia.viromedia) from Viro with the corresponding tunnel or local ip (if you''re connected locally). On those aspects, Viro reminds me of [Expo](https://expo.io/). Then, we''re able to access the test application:\n\n<Vimeo id="326854583"/>\n\nIn addition to these running facilities, Viro also offers hot-reloading, live-reloading, error messages & warnings directly on the device, just like any React-Native application does.\n\n### Initializing a Scene Navigator\n\nDepending on the type of project you want, Viro provides 3 distinct `SceneNavigator` components which are the following:\n\n- ViroVRSceneNavigator: For VR Applications\n- ViroARSceneNavigator: For AR Applications\n- Viro3DSceneNavigator: For 3D (not AR/VR) Applications\n\nThis components are used as entry points for our application. You must choose one depending on what you want to do, in our case `ViroARSceneNavigator` for Augmented Reality.\n\nEach `SceneNavigator` requires two distinct props which are `apiKey` and `initialScene`. The first one comes from your registration on the Viro website, the second one is an object with a `scene` attribute with our scene component as value.\n\n```js\n// App.js\n\nimport React from ''react'';\nimport { View, StyleSheet } from ''react-native'';\nimport { ViroARSceneNavigator } from ''react-viro'';\nimport { VIROAPIKEY } from ''react-native-dotenv'';\n\nimport PlayScene from ''./src/PlayScene'';\n\nconst styles = StyleSheet.create({\n    root: {\n        flex: 1,\n        backgroundColor: ''#fff'',\n    },\n});\n\nconst App = () => (\n    <View style={styles.root}>\n        <ViroARSceneNavigator\n            apiKey={VIROAPIKEY}\n            initialScene={{ scene: PlayScene }}\n        />\n    </View>\n);\n\nexport default App;\n```\n\nSince we want to keep our Viro `apiKey` private, we use the `react-native-dotenv` package in conjunction with a `.env` file at the root of our project folder.\n\nTo make it psosible, just install this package with `yarn add -D react-native-dotenv` and create a `.env` file with `VIROAPIKEY=<YOUR-VIRO-API-KEY>` in it.\n\nThe last step is to add the preset to babel has described below.\n\n```diff\n// .babelrc\n\n{\n  "presets": [\n    "module:metro-react-native-babel-preset",\n+   "module:react-native-dotenv"\n  ]\n}\n```\n\n### Adding a Scene\n\nNow that the bootstrap is done, it''s time to develop our first scene!\n\n[Viro Scenes](https://docs.viromedia.com/docs/scenes) act as containers for all our UI Objects, Lights and 3D objects. There are 2 types of Scene components: `ViroScene` and `ViroARScene`.\n\nEach `Scene` contains a hierarchical tree structure of nodes that are managed by a full-featured 3D scene graph engine. `ViroScene` children are positioned through `ViroNode` components that represent **positions** and **transformations** in 3D space.\n\nSo, almost every object under the tree has a `position`, `rotation` and `scale` prop that accept an array of coordinates/vector (x, y, z) as described below.\n\n```js\n<ViroNode\n    position={[2.0, 5.0, -2.0]}\n    rotation={[0, 45, 45]}\n    scale={[2.0, 2.0, 2.0]}\n />\n```\n\nNow that we know how it works, we can create our first `ViroARScene` (aka `PlayScene`).\n\n```js\n// src/PlayScene.js\n\nimport React from ''react'';\n\nimport {\n    ViroARScene,\n    Viro3DObject,\n    ViroAmbientLight\n} from ''react-viro'';\n\nconst MarmelabLogo = () => (\n    <Viro3DObject\n        source={require(''../assets/marmelab.obj'')}\n        resources={[require(''../assets/marmelab.mtl'')]}\n        highAccuracyEvents={true}\n        position={[0, 0, -1]} // we place the object in front of us (z = -1)\n        scale={[0.5, 0.5, 0.5]} // we reduce the size of our Marmelab logo object\n        type="OBJ"\n    />\n);\n\nconst PlayScene = () => (\n    <ViroARScene displayPointCloud>\n        <ViroAmbientLight color="#fff" />\n        <MarmelabLogo />\n    </ViroARScene>\n);\n\nexport default PlayScene;\n```\n\nIn the previous code, we''ve introduced 2 new Viro Components that are `Viro3DObject` and `ViroAmbiantLight`.\n\nThe `Viro3DObject` allows creating 3D objects from 3D structure / textures files that can be placed on our Viro `Scene`. In our case, we declare a component using our previously blended Marmelab logo object.\n\nThe `ViroAmbientLight` introduce some lighting in our `Scene`. Without that light, no object is visible.\n\n<Vimeo id="331017433"/>\n\nThe final result is really amazing, especially since we spent very little time on it.\n\n## Level Up: Developing A Reversi In AR\n\nAfter this little exploration, it''s time for us to develop a more tangible application using this technology. Since I don''t want to do modeling or coding business logic this time, I''ll reuse an existing codebase and blended objects (disks) from a previous projects I worked on during a hackday. It''s a [Reversi Game using ThreeJS](https://marmelab.com/blog/2017/06/15/animate-you-world-with-threejs-and-tweenjs.html).\n\n<img src="./images/arcoretarget.png" class="responsive" alt="Anchor & Target" />\n\n### The Reversi PlayScene\n\nAccording to our previous experiment, we''re going to replace our `PlayScene` to include a new `Game` component that contains a `Board` that itself contains `Disk` object components.\n\n```js\n// src/PlayScene.js\n\nimport React from ''react'';\n\nimport {\n    ViroARScene,\n    ViroAmbientLight,\n} from ''react-viro'';\n\nimport Game from ''./components/Game'';\nimport { create as createGame } from ''./reversi/game/Game'';\nimport { create as createPlayer } from ''./reversi/player/Player'';\nimport { TYPE_BLACK, TYPE_WHITE } from ''./reversi/cell/Cell'';\n\nconst defaultGame = createGame([\n    createPlayer(''John'', TYPE_BLACK),\n    createPlayer(''Charly'', TYPE_WHITE),\n]);\n\nconst PlayScene = () => {\n    const [game] = useState(defaultGame);\n\n    return (\n        <ViroARScene displayPointCloud>\n            <ViroAmbientLight color="#fff" />\n                <Game game={game} />\n        </ViroARScene>\n    );\n};\n\nexport default PlayScene;\n```\n\n```js\n// src/components/Game.js\n\nimport React, { Component } from ''react'';\n\nimport Board from ''./Board'';\nimport { getCurrentPlayer } from ''../reversi/game/Game'';\n\nclass Game extends Component {\n    // ...\n\n    render() {\n        const { game } = this.state;\n\n        return (\n            <Board\n                board={game.board}\n                currentCellType={getCurrentPlayer(game).cellType}\n                onCellChange={this.handleCellChange}\n            />\n        );\n    }\n}\n\nexport default Game;\n```\n\nThe Game relies on a Board and a Disk component:\n\n```js\n// src/components/Board.js\n\nimport React, { Component } from ''react'';\nimport PropTypes from ''prop-types'';\nimport { ViroNode } from ''react-viro'';\n\nimport Disk from ''./Disk'';\nimport { TYPE_WHITE, TYPE_EMPTY } from ''../reversi/cell/Cell'';\n\nclass Board extends Component {\n    // ...\n\n    renderCellDisk = cell => (\n        <Disk\n            key={`${cell.x}${cell.y}`}\n            position={[0.03 * cell.x, 0, -0.3 - 0.03 * cell.y]}\n            rotation={[cell.type === TYPE_WHITE ? 180 : 0, 0, 0]}\n            opacity={cell.type === TYPE_EMPTY ? 0.15 : 1}\n            onClick={this.handleClick(cell)}\n        />\n    );\n\n    render() {\n        const { board } = this.props;\n\n        return (\n            <ViroNode position={[0.0, 0.0, 0.5]}>\n                {board.cells\n                    .reduce(\n                        (agg, row, y) => [...agg, ...row.map((type, x) => createCell(x, y, type))],\n                        [],\n                    )\n                    .map(this.renderCellDisk)}\n            </ViroNode>\n        );\n    }\n}\n\nBoard.propTypes = {\n    onCellChange: PropTypes.func.isRequired,\n    currentCellType: PropTypes.number.isRequired,\n    board: PropTypes.shape({\n        cells: PropTypes.array,\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }),\n};\n\nexport default Board;\n```\n\n```js\n// src/Disk.js\n\nimport React from ''react'';\nimport { Viro3DObject } from ''react-viro'';\n\nconst Disk = props => (\n    <Viro3DObject\n        source={require(''../assets/disk.obj'')}\n        resources={[require(''../assets/disk.mtl'')]}\n        highAccuracyEvents={true}\n        position={[0, 0, -1]}\n        scale={[0.0007, 0.0007, 0.0007]}\n        type="OBJ"\n        {...props}\n    />\n);\n\nexport default Disk;\n```\n\nIt''s working! However, I think we all agree that it is not possible to play Reversi on a floating board... That''s why we''re going to define an [Anchor](https://docs.viromedia.com/docs/ar-tracking-and-anchors) on which we can place our `Game` / `Board`.\n\n### Placing Objects in Real-World\n\nIn Augmented Reality terminology, the concept of _attaching virtual objects to a real-world point_ is called **Anchoring**. According to that word, **Anchors** are used to achieve this task.\n\nAnchors are **vertical or horizontal planes**, or **images** (often markers) found in the real world by the AR system (ARCore or ARKit) on which we can rely to build a virtual world.\n\nWith Viro, Anchors are represented by an `Anchor` object which can be found through **Targets** using different detection methods, as described below.\n\n- `ViroARPlane`: This component allows to use either "manual" (though an "anchorId") or "automatic" detection of a plane in the real-world to place objects on it.\n- `ViroARPlaneSelector`: This component shows all the available planes discovered by the system and allows the user to select one.\n- `ViroARImageMarker`: This component allows to use an illustrated piece of paper as a physic anchor for our virtual objects.\n\nIn my case, I''ve chosen the `ViroARImageMarker` anchoring system because it seems more stable and performs better (at first glance).\n\n`ViroARImageMarker` has a mandatory prop called `target`. This prop which must contain the name of a registered target which has previously been declared using `ViroARTrackingTargets` module.\n\nThe first thing to do is to create our target using the `createTargets` function. In our case, we declare an image target named `marmelabAnchor` (yes, I''m very corporate...) because I used the Marmelab logo as an anchor.\n\nThen, we can use this anchor name directly as anchor prop value of our new `ViroARImageMarker` element around our `Game`.\n\n```diff\n// src/PlayScene.js\n\nimport React from ''react'';\n\nimport {\n    ViroARScene,\n    ViroAmbientLight,\n+   ViroARTrackingTargets,\n+   ViroARImageMarker,\n} from ''react-viro'';\n\nimport Game from ''./components/Game'';\nimport { create as createGame } from ''./reversi/game/Game'';\nimport { create as createPlayer } from ''./reversi/player/Player'';\nimport { TYPE_BLACK, TYPE_WHITE } from ''./reversi/cell/Cell'';\n\nconst defaultGame = createGame([\n    createPlayer(''John'', TYPE_BLACK),\n    createPlayer(''Charly'', TYPE_WHITE),\n]);\n\nconst PlayScene = () => {\n    const [game] = useState(defaultGame);\n\n    return (\n        <ViroARScene displayPointCloud>\n            <ViroAmbientLight color="#fff" />\n+           <ViroARImageMarker target={''marmelabAnchor''}>\n                <Game game={game} />\n+           </ViroARImageMarker>\n        </ViroARScene>\n    );\n};\n\n+ ViroARTrackingTargets.createTargets({\n+     marmelabAnchor: {\n+         type: ''Image'',\n+         source: require(''./assets/target.jpg''), // source of the target image\n+         orientation: ''Up'', // desired orientation of the image\n+         physicalWidth: 0.1, // with of the target in meters (10 centimeters in our case)\n+     },\n+ });\n\nexport default PlayScene;\n```\n\nAll `children` that are declared under the `ViroARImageMarker` element in the tree are placed relatively to it. In our case, the `Game` component is then placed over the `ViroARImageMarker` target.\n\n### Animating The Scene\n\nNow the AR reversi game is working better. But it lacks a little bit of animation. So, how can we add the same disk flip effects as we made in our previous ThreeJS project?\n\n<img src="./images/disk-flip.gif" class="responsive" alt="Disk Flip" />\n\nTo fill this usual need, ViroReact provides a global animation registry called **ViroAnimations** that can be used everywhere in conjunction with any component that accepts an `animation` prop.\n\nIn our case, we''re gonna **compose transformations** together to create a complete disk flipping effect. Here is the desired scenario over time:\n\n<table>\n    <tbody>\n        <tr>\n            <td style="text-align: right; width: 140px; padding-right: 20px">0 - 300ms</td>\n            <td><strong>Move Up</strong></td>\n        </tr>\n        <tr>\n            <td style="text-align: right; width: 140px; padding-right: 20px">300 - 600ms</td>\n            <td><strong>Move Down</strong></td>\n        </tr>\n        <tr>\n            <td style="text-align: right; width: 140px; padding-right: 20px">150 - 350ms</td>\n            <td><strong>Rotate (during disk reaches the top)</strong></td>\n        </tr>\n    </tbody>\n</table>\n\nFirst, we''re gonna register an animation according to this transformation timeline.\n\n```js\nimport { ViroAnimations } from ''react-viro'';\n\n// ...\n\nViroAnimations.registerAnimations({\n    moveUp: {\n        properties: { positionY: ''+=0.03'' },\n        duration: 300,\n        easing: ''EaseInEaseOut'',\n    },\n    moveDown: {\n        properties: { positionY: ''-=0.03'' },\n        duration: 300,\n        easing: ''EaseInEaseOut'',\n    },\n    flip: {\n        properties: { rotateX: ''+=180'' },\n        duration: 300,\n        easing: ''EaseInEaseOut'',\n        delay: 150\n    },\n    flipDisk: [[''moveUp'', ''moveDown''], [''flip'']],\n});\n```\n\nAs you see, we declare 3 distinct animations, and compose them using the fourth one, `flipDisk`. `moveUp` and `moveDown` are in the same array because they are executed one after the other. `flip` runs in parallel to these two transformations.\n\nSecondly, we just need to use this registered animation in our `Disk` component using the `animation` prop, as follows:\n\n```js\n    // ...\n\n    renderCellDisk = cell => {\n        const { flipping } = this.state;\n\n        return (\n            <Disk\n                key={`${cell.x}${cell.y}`}\n                position={[0.03 * cell.x, 0, -0.3 - 0.03 * cell.y]}\n                rotation={[cell.type === TYPE_WHITE ? 180 : 0, 0, 0]}\n                opacity={cell.type === TYPE_EMPTY ? 0.15 : 1}\n                onClick={this.handleClick(cell)}\n                animation={{\n                    name: ''flipDisk'',\n                    run: !!flipping.find(hasSamePosition(cell)),\n                    onFinish: this.handleEndFlip(cell),\n                }}\n            />\n        );\n    };\n\n    // ...\n```\n\nThe `animation` prop accepts an object of the following structure:\n\n```json\n{\n    name: string            // name of the animation\n    delay: number           // number of ms before animation starts\n    loop: bool              // animation can loop?\n    onFinish: func          // end callback of the animation\n    onStart: func           // start callback of the animation\n    run: bool               // animation is active or not?\n    interruptible: bool     // can we change animation when running?\n}\n```\n\nIn our case, we''ve just used `name`, `run`, and `onFinish` attributes to define which disk is currently flipping, and remove it from the flipping list when the animation ends.\n\n## Conclusion\n\nUsing ViroReact for building an Augmented Reality project was a great choice for many reasons. Whereas it was my first experience in this domain, **I haven''t faced any difficulties at any time**. Quite the contrary, Viro has helped me to explore this world with confidence.\n\nThe **developer experience is rich** as it offers ReactJS binding, hot-reload and unambiguous documentation. Nevertheless, **I don''t recommend to use it for complex / performance-based applications** because of the React-Native javascript thread which can lead to event congestion and lags. So, in case performance matters, I''d recommend full-native solutions instead.\n\nBy the way, Google is constantly adding augmented reality features within its applications, like [on Google Map](https://mashable.com/article/google-maps-ar-augmented-reality-walking-navigation/?europe=true#_pEnJI2JUaqE). **Augmented Reality has never been so expanding**. So, don''t miss it.\n\nMany other features remain to be explored, such as [Skeletal animations](https://docs.viromedia.com/docs/animation#section-skeletal-animation), [particles effects](https://docs.viromedia.com/docs/particle-effects), [physics](https://docs.viromedia.com/docs/physics), [video](https://docs.viromedia.com/docs/video) and [sounds](https://docs.viromedia.com/docs/audio). Don''t be shy, **share your experiences though comments** ;)\n\nYou can find the final code on GitHub, in [the marmelab/virothello repository](https://github.com/marmelab/virothello).\n','\n',char(10)),'Do you need to do native development to get native AR performance on mobile?',NULL,1,'2021-01-22 10:54:50.219875','2021-01-22 10:54:50.219875');
INSERT INTO articles VALUES(7,'Helping Amnesty International Target a New Audience','helping-amnesty-international-target-a-new-audience-tnjmze',replace('In 2016, we committed [to give some of our time to charities](/blog/2016/11/21/free-for-charity.html). A year ago, we found a project that brings a purpose to what we do every day: widen the Amnesty International _Urgent Action Network_ with the help of Lean Startup and cutting edge technology.\n\n_What is it about?_\n\n## Saving Lives With an A4 Paper\n\n<div style="width: 45%; margin-left: 5%; float:right;">\n    <div  style="overflow:hidden;box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);">\n        <img src="./images/ua.jpg" alt="The A4 page" class="responsive" />\n    </div>\n    <div style="font-size: 12px; font-style:italic; text-align: right;">\n        Urgent Action abstract, <a href="./UA.pdf">full document</a>\n    </div>\n</div>\n\n> [Amnesty''s Urgent Action Network](https://www.amnesty.org.uk/join-urgent-action-network) mobilizes volunteers, asking them to write letters quickly to protect human rights and save lives.\n\n_How does it work?_ Investigators are spread all around the globe where human rights are at risk. Whenever they notice someone in imminent danger, they write a report on a recto-verso A4 page and send it to Amnesty International.\n\nThat''s where the network kicks in. That A4 page is sent down to the members of the network as fast as possible. Immediately after being alerted, the writers write and send letters to the responsible authorities within a couple of days. Those authorities usually are embassies, governors, prosecutors or secretaries of state. Flooding them with thousands of letters from across the world gives them a message: _"we see what you''re doing"_, it creates pressure to stop the violation.\n\n<div class="grid">\n    <div style="width: 60%">\n        <img src="./images/writers.jpg" alt="volunteers writing letters" class="responsive" />\n    </div>\n    <div style="width: 35%; margin-left: 5%;">\n        <div  style="overflow:hidden;box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);">\n            <img src="./images/letter.jpg" alt="The A4 page" class="responsive" />\n        </div>\n        <div style="font-size: 12px; font-style:italic; text-align: right;">\n            Urgent Action letter, <a href="./letter.pdf">full document</a>\n        </div>\n    </div>\n</div>\n\nAnd it works! According to Amnesty, the Urgent Action Network has a positive impact in about 30% of the cases: it''s the activism method that works best (especially when compared to petitions, which have less and less impact).\n\n## The Problem\n\n_Why would we want to change something that is already very effective?_\n\nAmnesty noticed that writers are mostly retired persons gathering together to write letters. They invest a lot of time responding to the urgent actions, because they know that''s what it takes. It works, and no change is intended on that front.\n\nBut Amnesty fails to renew the population of the Urgent Action Network. Younger activists aren''t attracted to the network, even though its action is very effective. There have been huge changes in the way the younger generations live their lives: time is precious, attention span is very limited, retaining people is much harder. Amnesty has to adapt to the new usages in order for the Urgent Action Network to get bigger.\n\n## The Idea: Digitalize the Urgent Action Network\n\n![Free Taner Kiliç signs at the entrance of Amnesty International](/images/entrance.jpg)\n\nTo address that new target effectively, Amnesty thought of a mobile application. One that could make activists save a lot of time and that would retain their attention for as long as possible, proposing a very different experience from the single recto-verso A4 page. To confirm they were going in the right direction, they ran a survey on about 300 people in their target audience.\n\nMost people confirmed that:\n\n- Writing letters takes too much time\n- They weren''t helped enough while redacting the letter\n- They weren''t hooked because:\n  - they didn''t know what happened after sending the letter\n  - they didn''t know many other people were involved as well\n\nOur production vision started to appear:\n\n<p style="padding-left:20px">\n<b>For</b> young and/or active amnesty supporters,<br/>\n<b>who</b> want to act concretly when someone is in imminent danger of serious human rights violations<br/>\nour product <b>is a</b> digital service<br/>\n<b>that</b> helps rightholders in a quick and real way.<br/>\n<b>Unlike</b> petitions or rallies<br/>\n<b>our product</b> helps act immediately, in a simple and effective way, on mass personified-letters sending. It strongly and continuously engages users by valueing their individual and collective action.\n</p>\n\n## Exploration\n\nWe knew what the problems were, we then needed to explore the possible solutions. For that use, we ran a workshop where everyone shared their ideas. No limits, even the craziest ideas help go forward. We then gathered them by theme and discussed each of it.\n\n![Ideation session at Amnesty International](/images/ideation.jpg)\n\nSome examples of ideas that went through this process, from the point of view of the user:\n\n- The summary of the subject of the urgent action should be attractive so that I don''t lose track.\n- The letter should be written on my behalf but should be customizable by hand, or by selecting different writing styles, or by expressing how I feel about the situation.\n- I should be able to invite my friends and family to take part in the urgent action I''ve just participated in.\n- I want to be able to send the letter without going to the post office, even if I have to pay for it.\n- I want to have news about the urgent actions I''ve participated in, whether the situation gets better or not.\n- There should be something letting me know that I''m not alone and that''s it''s our collective action that makes a difference.\n- I can share the letter I''ve written to help other activists.\n\n## Identifying Uncertainties\n\nWe had a lot of ideas, but [ideas only are convictions](/blog/2018/03/12/the-lean-startup.html#whats-the-problem). From our small survey, and from our design work, we only **thought** those ideas would bring value to our users.\n\nSince we addressed a new target, we only knew so much about our users. When making assumptions about what they want, we take the risk of not building something they will like to use. These assumptions are, in fact, leaps of faith.\n\n_How do we un-risk this?_ We need to identify and prioritize our assumptions by the value they bring to our model:\n\n1. Writing the letter on behalf of the user doesn''t decrease urgent actions effectiveness\n2. Writing the letter on behalf of the user doesn''t decrease engagement because it''s simpler\n3. We have enough input to produce attractive stories for urgent actions\n4. The new target doesn''t need to produce as much effort as the current target to feel a sense of self-worth\n5. Social sharing is a good lever to community growth\n\nThen, we need to design an experiment for the most risky assumptions as quickly as possible. That''s a subject we''ll address in the next posts in this series.\n\n## Conclusion\n\nAmnesty''s project is typical of what we do at Marmelab: turn an existing product or service into a more effective one by focusing on the target population, identifying assumptions, and testing them one by one.\n\nAs compared with other projects we do, by building something with Amnesty, we dedicate our expertise to the greater good. This makes our work have a different taste: there is nothing better than helping the ones who really need it.\n\nThis post is one of a series. Make sure you read [the next one](/blog/2019/10/07/amnesty-international-designing-the-experience.html), explaining how we designed the experience for Amnesty activists.\n','\n',char(10)),'he pen is mightier than the sword... Can we get a smartphone to be as mighty? Read the story of how Marmelab  helped AI to invent a new form of activism.',1,1,'2021-01-22 10:55:34.532574','2021-01-22 10:55:34.532574');
INSERT INTO articles VALUES(8,'CouchDB, The Open-Source Cloud Firestore Alternative?','couchdb-the-open-source-cloud-firestore-alternative-ilo8sv',replace('During one of our last customer projects, we used [**Firebase**](https://firebase.google.com/), a backend-as-a-service by Google, as our backend. Althought satisfied by this "all-included" suite as a whole, we remained disappointed by its proprietary aspect.\012\012<img src="./images/firebaselogo.png" alt="Firebase" />\012\012That''s why I took the initiative to **look for an open-source alternative to Firebase** that could cover all our needs without depending on a third party service.\012\012The first step in this quest is to find a substitute to the [**Cloud Firestore**](https://firebase.google.com/docs/firestore) realtime NoSQL database for the web.\012\012## What Do We Need?\012\012Using Firestore rather than a more classic database is not trivial. It often results from the need to quickly develop an application with the following features:\012\012- **Offline First**, client writes to local database that is synchronized with remote one\012- **Realtime**, remote changes must be in sync with our local database\012\012Some solutions exist to cover this need, most of them are based on **NoSQL databases** such as [MongoDB](https://www.mongodb.com/fr), [Cassandra](http://cassandra.apache.org/), [RethinkDB](https://www.rethinkdb.com/), [Gun](https://gun.eco) or others MongoDB based solutions like [Minimongo](https://docs.meteor.com/api/collections.html), [turtleDB](https://turtle-db.github.io/) or [tortoiseDB](https://github.com/turtle-DB/tortoiseDB).\012\012In our case, we''re going to give [CouchDB](http://couchdb.apache.org/) (and [PouchDB](https://pouchdb.com/) for the frontend) a try, because it''s the more robust and best known solution from our point of view.\012\012## CouchDB & PouchDB\012\012CouchDB is an **open-source** / **cross-platform** document oriented database software. It is developed on the basis of the **concurrency-oriented** [Erlang](<https://en.wikipedia.org/wiki/Erlang_(programming_language)>) language, allowing it to benefit from an high scalability. It uses **JSON** to store its data, and an **HTTP API** to expose it.\012\012<table>\012  <tr>\012    <td style="text-align: center">\012      <img src="./images/couchdblogo.png" alt="CouchDB" />\012    </td>\012    <td style="text-align: center; width: 50%">\012      <img src="./images/pouchdblogo.png" alt="PouchDB" />\012    </td>\012  </tr>\012</table>\012\012CouchDB was born in 2005. Since 2008, CouchDB became an **Apache Software Foundation project**, which allows it to benefit from a lot of support and a large communauty.\012\012Here are the main features of CouchDB:\012\012- **Multi-Version** Concurrency Control (which lets you build offline-first solutions easily)\012- Distributed Architecture with **Replication**\012- Document Storage\012- HTTP / REST API\012\012Since **CouchDB runs on the server**, many client library allows to communicate with it thanks to the HTTP interface it offers.\012\012The most known CouchDB client library for the web is called PouchDB. **PouchDB is an open-source Javascript database** that is designed to run within the browser. This way, it allows to **store data locally** offline, and sync it with the remote CouchDB server when the user comes back online.\012\012## CouchDB & PouchDB in Practice\012\012Enough introduction, let''s get practical! In this section, I''ll describe the development of a [ReactJS](https://reactjs.org/) application using CouchDB and PouchDB as database system, step by step. Meanwhile, I''ll try, as much as I can, to compare the CouchDB implementation to the Firestore one.\012\012Also, I''ll present you some of my latest loves in terms on Javascript librairies: [Final-Form](https://github.com/final-form/final-form), [ElasticUI](https://elastic.github.io/eui/) and [Indicative](https://github.com/poppinss/indicative).\012\012<table>\012  <tr>\012    <td style="text-align: center">\012      <img src="./images/finalform.png" class="responsive" alt="Final Form" />\012    </td>\012    <td style="text-align: center">\012      <img src="./images/eui.png" class="responsive" alt="ElasticUI" />\012    </td>\012    <td style="text-align: center">\012      <img src="./images/indicative.png" class="responsive" alt="Indicative" />\012    </td>\012  </tr>\012</table>\012\012In this project, I''m going to create a beer registry, which allows users to keep track of their beer stocks.\012\012### Project Setup\012\012In order to keep this tutorial as simple as possible, I''ll create a ReactJS application using [create-react-app](https://github.com/facebook/create-react-app).\012\012```bash\012create-react-app reactive-beers && cd reactive-beers\012\012npm install -S pouchdb\012```\012\012The application skeleton looks like the following:\012\012```bash\012julien@julien-P553UA:~/Projets/marmelab/reactive-beers$ tree -L 1\012.\012├── node_modules\012├── package.json\012├── package-lock.json\012├── public\012├── README.md\012└── src\012```\012\012Then, since I don''t want to install CouchDB directly on my machine, I''ll use [Docker](https://www.docker.com/). So, the first step is to configure a `docker-compose.yml` file and the associated `Makefile` to improve developer experience.\012\012```yaml\012// ./docker-compose.yml\012\012version: "2.1"\012\012services:\012  couchdb:\012    image: couchdb:2.3.0\012    ports:\012      - "5984:5984"\012\012  node:\012    image: node:10\012    command: npm start\012    working_dir: "/app"\012    volumes:\012      - ".:/app"\012    ports:\012      - "4242:3000"\012    depends_on:\012      - couchdb\012```\012\012```bash\012# ./Makefile\012\012USER_ID = $(shell id -u)\012GROUP_ID = $(shell id -g)\012\012export UID = $(USER_ID)\012export GID = $(GROUP_ID)\012\012DOCKER_COMPOSE_DEV = docker-compose -p reactive-beers\012\012help: ## Display available commands\012	@fgrep -h "##" $(MAKEFILE_LIST) | fgrep -v fgrep | awk ''BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}''\012\012install: ## Install docker stack\012	$(DOCKER_COMPOSE_DEV) run --rm node bash -ci ''npm install''\012\012start: ## Start all the stack\012	$(DOCKER_COMPOSE_DEV) up -d\012\012stop: ## Stop all the containers\012	$(DOCKER_COMPOSE_DEV) down\012\012log: ## Show logs\012	$(DOCKER_COMPOSE_DEV) logs -f node\012```\012\012So, we''re now ready to start our complete stack using `make install start`.\012\012```bash\012julien@julien-P553UA:~/Projets/marmelab/reactive-beers$ docker ps\012CONTAINER ID        IMAGE            COMMAND                  CREATED       STATUS       PORTS                                        NAMES\0126884f92c5341        node:10          "npm start"              3 hours ago   Up 3 hours   0.0.0.0:4242->3000/tcp                       reactive-beers_node_1\01221897f166ce4        couchdb:2.3.0    "tini -- /docker-ent…"   3 hours ago   Up 3 hours   4369/tcp, 9100/tcp, 0.0.0.0:5984->5984/tcp   reactive-beers_couchdb_1\012```\012\012Everything is launched. You may have noticed that the `5984` port is exposed in our `docker-compose.yml` file, it''s the CouchDB api. Then, if you open `localhost:5984` in the browser, you''ll see something similar to the following.\012\012```json\012{\012  "couchdb": "Welcome",\012  "version": "2.3.0",\012  "git_sha": "07ea0c7",\012  "uuid": "49f4e7520f0e110687dcbc8fbbb5409c",\012  "features": ["pluggable-storage-engines", "scheduler"],\012  "vendor": {\012    "name": "The Apache Software Foundation"\012  }\012}\012```\012\012## Accessing The Document Store\012\012OK, our server is up and running. But, is there an **interface to visualise / supervise** CouchDB just like Firestore does? The answer is YES! CouchDB already includes an administration interface called `Fauxton`. We can browse it at `http://localhost:5984/_utils/`.\012\012<figure>\012  <img src="./images/firestore.png" class="responsive" alt="Firestore interface" />\012  <figcaption>Firestore Admin Interface</figcaption>\012</figure>\012<br />\012<figure>\012  <img src="./images/fauxton.png" class="responsive" alt="Fauxton interface" />\012  <figcaption>Fauxton Admin Interface</figcaption>\012</figure>\012\012The `Fauxton` interface allows to access databases, setup nodes and clusters, configure replication, setup permissions, etc. Although practical, **it is still preferable to automate these administration tasks with dedicated scripts**.\012\012## React Kicks In\012\012Now, we can start to develop our first PouchDB powered interface. Then, here are our main `App.js` entry point and the `Home.js` start screen.\012\012```js\012// ./src/App.js\012\012import React from "react";\012import { Home } from "./screens/Home";\012\012const App = () => <Home />;\012\012export default App;\012```\012\012The `App.js` file has no interest for the moment. It''ll certainly become useful when we need to add more routes and screens in the future.\012\012```js\012// ./src/screens/Home.js\012\012import React, { useState, useEffect } from "react";\012import { addBeer, getBeers, onBeersChange } from "../api/beers";\012\012export const Home = () => {\012  const [beers, setBeers] = useState([]);\012\012  const refreshBeers = () => getBeers().then(setBeers);\012\012  useEffect(() => {\012    // We fetch beers the first time (at mounting)\012    refreshBeers();\012\012    // Each change in our beers database will call refreshBeers\012    const observer = onBeersChange(refreshBeers);\012    return () => {\012      // Don''t forget to unsubscribe our listener at unmounting\012      observer.cancel();\012    };\012  }, []);\012\012  return (\012    <div>\012      <button onClick={() => addBeer({ title: "Beer X" })}>Add a beer</button>\012      <ul>\012        {/* beer._id is an unique id generated by CouchDB */}\012        {beers.map(beer => (\012          <li key={beer._id}>{beer.title}</li>\012        ))}\012      </ul>\012    </div>\012  );\012};\012```\012\012## CouchDB Requires More Requests Than Firestore\012\012As you see, in this example we use a combination of a listener (`onBeersChange`) and a a query (`getBeers`) to get the initial beers list and refresh it when a change is issued in the database.\012\012This operation is not optimal compared to the one Firestore offers. Indeed, while **pouchdb is not able to return both changes and data** to us, Firestore is able to do so thanks to a `QuerySnapshot` system, thereby reducing server trips back and forth. See by yourself with the Firestore example below:\012\012```js\012db.collection("anything").onSnapshot(function(querySnapshot) {\012  querySnapshot.forEach(function(doc) {\012    // This forEach loop is executed at first execution\012    // And executed each time the query result changes\012  });\012});\012```\012\012So, if we had used Firestore instead, here''s what it would have looked like:\012\012```js\012//...\012\012const [beers, setBeers] = useState([]);\012\012useEffect(() => {\012  const unsubscribe = db\012    .collection("beers")\012    .onSnapshot(function(querySnapshot) {\012      const snapBeers = [];\012      querySnapshot.forEach(function(doc) {\012        snapBeers.push(doc.data());\012      });\012\012      setBeers(snapBeers);\012    });\012\012  return () => {\012    unsubscribe();\012  };\012}, []);\012\012// ...\012```\012\012<div class="tips">\012\012It''s also possible to use `.map` on the `querySnapshot.docs` attribute to retrieve all the documents in a "non-imperative" way. Unfortunately, this functionality is not sufficiently covered by the official documentation.\012\012</div>\012\012## The Model\012\012Just like in backend development, I like to separate the model logic from the view logic in my frontend apps. So here is the API file for our beers below:\012\012```js\012// ./src/api/beers.js\012\012import PouchDB from "pouchdb";\012\012// We declare a PouchDB instance that is "remote only"\012// There''s no "offline" capability for the moment, everything is sync\012export const beersDatabase = new PouchDB("http://localhost:5984/beers");\012\012// If the beers database does not already exist\012// => The database is automatically created when an object is added to it\012export const addBeer = beer => beersDatabase.post(beer);\012\012// Here, we list all the documents from our beers database\012// A lot of options exists. Eg: we can paginate using "startKey", "endKey" or "limit"\012export const getBeers = () =>\012  beersDatabase\012    .allDocs({\012      include_docs: true,\012      descending: true,\012    })\012    .then(doc => doc.rows.map(row => row.doc));\012\012// We listen all the changes that happen since now\012// We can also apply a "limit" option to this method\012export const onBeersChange = callback =>\012  beersDatabase.changes({ since: "now", live: true }).on("change", callback);\012```\012\012Here is the result of our first CouchDB application in action. As you can see, everything is in sync between multiple windows.\012\012<img src="./images/sync-beers.gif" class="responsive" alt="PouchDB sync" />\012\012### Offline Sync\012\012Sadly, our actual version only works when the internet access is up and running. In other cases, such as a bloated network or packet loss, beers will never (or slowwwwly...) be added in the beers list because of the "remote only" sync.\012\012The right way to avoid this problem is to keep a **local first** approach. It means that we must achieve all our database operations on the local database, then synchronize it with the remote one when internet access comes back.\012\012<img src="./images/nointernet.png" class="responsive" alt="Internet Offline" />\012\012So, the first step is to declare a new PouchDB instance with a database name instead of a remote database url. This way, PouchDB automatically detects that we want to instantiate a local database.\012\012```js\012import PouchDB from "pouchdb";\012\012// Declare local database\012const beersDatabase = new PouchDB("beers");\012\012// Declare remote database\012const remoteBeersDatabase = new PouchDB(`http://localhost:5984/beers`);\012\012// Keep local and remote databases in sync\012PouchDB.sync(beersDatabase, remoteBeersDatabase, {\012  live: true, // replicate changes in live\012  timeout: false, // disable timeout\012  retry: true, // retry sync if fail\012});\012```\012\012The `PouchDB.sync` instruction is the equivalent of a bidirectionnal `PouchDB.replicate` instruction between local and remote databases.\012\012```js\012PouchDB.replicate(beersDatabase, remoteBeersDatabase);\012PouchDB.replicate(remoteBeersDatabase, beersDatabase);\012```\012\012By default, PouchDB uses [IndexedDB](https://developers.google.com/web/ilt/pwa/working-with-indexeddb) as local database (just like Firestore by the way). So, now that our setup is done, we can take a look at our local database using the Chrome console.\012\012<img src="./images/indexeddbcapture.png" class="responsive" alt="Indexed DB" />\012\012As you can see, we find the complete list of beers we''ve created. Each one is uniquely identified by a `key` that is built from `_id` and `_rev` CouchDB attributes.\012\012```js\012{\012  "_id": "0c2738a3-d363-405f-b9bb-0ab6f5ec9655",\012  "_rev": "3-b90bd9d62fbe04e36fe262a267efbd42",\012  "title": "Beer X"\012}\012```\012\012Whereas the `_id` represents an unique document, the `_rev` represents the **revision** identifier of it. In fact, each modification of a document implies a new version of it which then makes it possible to manage conflicts.\012\012<div class="tips">\012\012Unlike CouchDB, Firestore documents do not have a **revision** id. So, the only way not to struggle with conflicts using Firestore is to use [**transactions**](https://firebase.google.com/docs/firestore/manage-data/transactions).\012\012Moreover, since CouchDB records every submitted change, **it is possible to return back or resolve conflict in a second time**, which is essential in order not to risk losing data.\012\012For more information on conflict management using PouchDB, check [the PouchDB Conflict documentation](https://pouchdb.com/guides/conflicts.html).\012\012</div>\012\012Now that we are able to communicate with both local and remote databases, we can focus on the business logic and on the user interface. Moreover, it''ll allow us to benefit from **optimistic rendering** while making our application **more flexible in addressing network issues**.\012\012## Forms & Validation\012\012In this section, we will implement a form to be able to add new beers. To do that, I''m going to use `final-form` (and `react-final-form`, an adapter for ReactJS).\012\012```bash\012npm install -S final-form react-final-form\012```\012\012So, we can create a simple form to handle user input.\012\012```js\012// ./src/components/BeerForm.js\012\012import React from ''react'';\012import { Form, Field } from ''react-final-form'';\012\012export const BeerForm = ({ onSubmit }) => (\012  <Form\012    validate={() => ({})}\012    onSubmit={onSubmit}\012    render={({\012      handleSubmit,\012      hasValidationErrors,\012      pristine,\012      invalid,\012      submitErrors,\012      submitting,\012      form,\012    }) => (\012        <form onSubmit={handleSubmit}>\012         <div>\012            <label>Title</label>\012            <Field name="title" component="input" />\012          </div>\012          <div>\012            <label>Description</label>\012            <Field\012              name="description"\012              component="textarea"\012              rows={2}\012              placeholder="Tape your description here..."\012            />\012          <div/>\012          <button type="submit" disabled={pristine || hasValidationErrors || submitting}>\012            Submit\012          </button>\012          {submitErrors && submitErrors.global && (\012            <p>{submitErrors.global}</p>\012          )}\012        </form>\012      )\012    }\012  />\012);\012```\012\012Then, we can replace our action button by the form in our home screen.\012\012```js\012// ./src/screens/Home.js\012\012import React, { useState, useEffect } from "react";\012import { addBeer, getBeers, onBeersChange } from "../api/beers";\012\012export const Home = () => {\012  const [beers, setBeers] = useState([]);\012\012  /* ... */\012\012  return (\012    <div>\012      <BeerForm onSubmit={beer => queries.addBeer(beer)} />\012      <ul>\012        {/* beer._id is an unique id generated by CouchDB */}\012        {beers.map(beer => (\012          <li key={beer._id}>{beer.title}</li>\012        ))}\012      </ul>\012    </div>\012  );\012};\012```\012\012## Data Validation With Indicative\012\012So, we have a form, but there''s no data validation for the moment. Users can send anything they want at this time. That''s why we''re going to set up a data validator using `indicative`, a library that I''ve just discovered and that I want to give a try.\012\012```bash\012npm install -S indicative\012```\012\012The Indicative API is very simple. It consists of a `Validator` object that uses a set of validation rules and a `formatter`. Here is a usage example:\012\012```js\012import Validator from ''indicative/builds/validator'';\012import { Vanilla as VanillaFormatter } from ''indicative/builds/formatters'';\012import { required, email } from ''indicative/builds/validations'';\012\012const validator = Validator({ required, email }, VanillaFormatter);\012\012const rules = {\012  name: ''required'',\012  email: ''required|email'',\012};\012\012const messages = {\012  ''required'': ''{{ field }} field is required'', // This message works for all required rules\012  ''email.required'': ''You must provide an email!'', // This message is specific for required email\012  ''email.email'': ''The email adress is invalid'',\012};\012\012const values = {\012  email: ''bad email'',\012};\012\012// Validator.validate is async\012\012validator\012  .validate(values, rules, messages)\012  .then(() => /* everything is ok! */)\012  .catch((errors) => {\012    /*\012      [\012        { field: ''name'', message: ''name field is required!'' },\012        { field: ''email'', message: ''The email adress is invalid'' },\012      ]\012    */\012  });\012```\012\012Here is our custom implementation for `BeerForm.js`.\012\012```js\012// ./src/components/BeerForm.js\012\012import React from "react";\012import { Form, Field } from "react-final-form";\012import { Vanilla } from "indicative/builds/formatters";\012import Validator from "indicative/builds/validator";\012import { required } from "indicative/builds/validations";\012\012const validator = Validator({ required }, Vanilla);\012\012const rules = {\012  title: "required",\012  description: "required",\012};\012\012const messages = {\012  "title.required": "Beer title is required",\012  "description.required": "Beer description is required",\012};\012\012const validate = async values =>\012  validator\012    .validate(values, rules, messages)\012    .then(() => ({}))\012    .catch(errors => {\012      return errors.reduce((acc, error) => {\012        acc[error.field] = error.message;\012        return acc;\012      }, {});\012    });\012```\012\012Final Form needs an object as error model, so we format errors in the `catch` using a `reduce`. Alternatively, it would have been possible to use a [Custom Indicative Formatter](https://indicative.adonisjs.com/docs/formatters#_creating_your_own).\012\012So, now we have our custom validation function, we can replace our empty validate function.\012\012```diff\012export const BeerForm = ({ onSubmit }) => (\012  <Form\012-  validate={() => ({})}\012+  validate={validate}\012```\012\012And tadaaa! Our validated form is up and running and we are ready to play with it.\012\012<img src="./images/finalformexample.gif" alt="Final Form Indicative" />\012\012## Let''s Make It Beautiful!\012\012To summarize, we can display beers, we can add beers, everything works offline and is in sync with a remote server. But right now, it''s not very aesthetic, and I wouldn''t dare present it to my mother-in-law. So, how about making it a little prettier?\012\012In this section, I''ll use the [Elastic UI](https://elastic.github.io/eui/) framework (aka `eui`) that is in use at [Elastic](https://www.elastic.co/fr/), the company that develops ElasticSearch.\012\012I think we all agree that we must remove this despicable list and replace it with a nice grid. Fortunately, Eui allows it easily.\012\012<img src="./images/beergridfull.png" alt="Beer Grid" />\012\012As you can see, we took the opportunity to add editing and deleting beers right from the grid. We''ll also put the form in a sliding panel from the right of the page. This way, we can directly add a beer from a "+" button in the navbar, or edit a beer directly from the grid, without changing page.\012\012## Handling Image Attachments\012\012I don''t know about you, but seeing all these grey beer cans breaks my heart. So it''s time to allow image upload in the form.\012\012```js\012// ./src/components/BeerForm.js\012\012const handleIllustration = async files => {\012  if (files.length === 0) {\012    form.change("_image", undefined);\012    return;\012  }\012\012  const file = files[0];\012\012  form.change("_image", {\012    data: file,\012    type: file.type,\012  });\012};\012\012<EuiFormRow label="Beer Illustration">\012  <EuiFilePicker onChange={handleIllustration} />\012</EuiFormRow>;\012```\012\012This custom `_image` attribute that I just added to the beer object is then handled by our beer api, and considered as a [**PouchDB attachement**](https://pouchdb.com/guides/attachments.html).\012\012```js\012// ./src/api/queries.js\012\012const saveBeer = async ({ _image, ...beer }) =>\012  store\012    .collection(''beers'')\012    .post(beer)\012    .then(\012      ({ id, rev }) =>\012        // if an "_image" attribute is present, we put an attachement to the document\012        _image &&\012        store\012          .collection(''beers'')\012          .putAttachment(id, ''image'', rev, _image.data, _image.type)\012    );\012\012const getBeers = () =>\012  store\012    .collection(''beers'')\012    .allDocs({\012      include_docs: true,\012      descending: true,\012      attachments: true, // We include images in the output, so we can display them\012    })\012    .then(doc => doc.rows.map(row => row.doc));\012};\012```\012\012In CouchDB, every file can directly be attached to its corresponding document as an `attachement`. This concept does not exist in Firestore. It is then preferable to use [Firebase Storage](https://firebase.google.com/docs/storage) (Google Cloud Storage) through its bucket system to store files and store paths in Firestore.\012\012<img src="./images/beerregistry.gif" alt="Final Application" />\012\012## Conclusion\012\012The final result of my beer registry application is available on GitHub at the following address: [github.com/marmelab/reactive-beers](https://github.com/marmelab/reactive-beers). Feel free to comment and improve!\012\012While I was doubtful about the power of CouchDB at first, I was quickly conquered by its stability and the ease of use of its API.\012\012Since I have not yet deployed this type of application in production, I am not in a position to comment on the ease of maintenance of this type of database. Nevertheless, I would rather recommend using **Firestore for POCs**, and a **third-party service like [Couchbase](https://www.couchbase.com/products/data-platform) or [IBM Cloudant](https://www.ibm.com/cloud/cloudant) for critical applications** in the first place.\012\012Although this experience allowed me to balance the pros and cons of the main features of each database, it was not possible for me to go as far as I had expected.\012\012Indeed, I didn''t have time to cover many crucial points such as _document access security_, _rights management_, _server-side document validation_, _data pagination_ or _deployment_. But no matter what, I am determined to write more articles on these topics.\012\012So, Stay tuned!\012','\012',char(10)),'How to develop an offline-first, real time React app using a NoSQL database, in practice.',1,1,'2021-01-22 10:56:20.002263','2021-01-22 10:56:20.002263');
INSERT INTO articles VALUES(9,'Comment mettre en place les migrations avec Hasura','comment-mettre-en-place-les-migrations-avec-hasura-lcpxgx',replace('Le mercredi chez Mamelab, nous avons une journée de hackday qui nous permet de tester différentes technologies. Il y a peu de temps, j''ai choisi de m''intéresser au produit [Hasura](https://hasura.io), un serveur GraphQL pour PostgreSQL.\n\nJ''ai pris l''exemple du tutoriel Angular [Tour of heroes](https://angular.io/tutorial) pour créer un [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) en React avec l''aide d''Hasura pour le côté API et base de données. Vous pouvez retrouver le projet sur [github.com/zyhou/heroes-hasura-react](https://github.com/zyhou/heroes-hasura-react).\n\n<img src="./images/tourofheroes.gif" alt="Tour of heroes"/>\n\nSi vous connaissez déjà Hasura, vous pouvez vous rendre directement à la partie [Mise en place des migrations](#et-les-migrations-).\n\n## Hasura, c''est quoi ?\n\nRégulièrement, nous découvrons de nouveaux outils et produits qui facilitent le développement d''API GraphQL. Hasura fait partie de ces outils.\n\n[Hasura](https://hasura.io) est un serveur GraphQL qui utilise votre base de données Postgres pour générer une API GraphQL. On pourrait penser qu''il ressemble à un ORM traditionnel mais en fait il est bien plus puissant. Vous pouvez retrouver la liste de toutes les fonctionnalités sur leur site.\n\nPour en apprendre plus sur Hasura et comprendre pourquoi il est intéressant de l''utiliser, je vous laisse regarder [la documentation officielle](https://docs.hasura.io/1.0/graphql/manual/index.html).\n\n## Mon avis sur Hasura\n\nHasura est vraiment très simple à mettre en place, il est en plus disponible sur beaucoup de services comme [Heroku](https://docs.hasura.io/1.0/graphql/manual/getting-started/heroku-simple.html), [Digital Ocean](https://docs.hasura.io/1.0/graphql/manual/guides/deployment/digital-ocean-one-click.html), [Docker](https://docs.hasura.io/1.0/graphql/manual/getting-started/docker-simple.html) et [AWS](https://blog.hasura.io/instant-graphql-on-aws-rds-1edfb85b5985/), etc...\n\nEn utilisant Hasura, j''ai découvert qu''il répondait à plusieurs besoins.\n\n- Mettre en place rapidement un projet pour avoir une API fonctionnelle\n- Pouvoir ajouter une partie Frontend React facilement grâce à `docker compose`\n- Faire le lien avec une base de données Postgres sans utiliser 50 frameworks différents\n\nLe tutoriel d''introduction est rapide à réaliser. En quelques minutes, on se retrouve avec Hasura et une base de données Postgres. L''interface proposée pour l''administration est intuitive. Il est possible de créer facilement notre base de données, ainsi que mettre à jour le schéma GraphQL. Il propose GraphiQL et un éditeur SQL à la phpmyadmin.\n\nOn trouve rapidement les réponses aux questions que l''on peut se poser après la lecture du tutoriel d''introduction :\n\n- Comment déployer notre projet ? [lien vers la documentation](https://docs.hasura.io/1.0/graphql/manual/deployment/index.html#deployment-guides)\n- Comment gérer l''authentification ? [lien vers la documentation](https://docs.hasura.io/1.0/graphql/manual/auth/index.html)\n- Comment être au courant des nouveautés ? [https://blog.hasura.io/](https://blog.hasura.io/)\n- Est-ce que le projet est open-source ? [github.com/hasura](https://github.com/hasura/graphql-engine)\n\nD''après moi, la mise en place des migrations est la partie la plus obscure, nous y reviendrons en détail plus tard.\n\n## Ajouter sa propre logique métier\n\nAvant cela, faisons un petit zoom sur l''ajout de logique métier. Hasura ne facilite pas la tâche dans ce domaine, il ne permet pas de spécifier un "resolver" particulier pour une requête d''API donnée. Hasura propose deux solutions.\n\nLa première solution est le [schéma stitching](https://blog.hasura.io/the-ultimate-guide-to-schema-stitching-in-graphql-f30178ac0072/). Sur le schéma de gauche où est présentée la notion de "remotes schemas", vous pouvez constater qu''Hasura a la capacité de fusionner des schémas GraphQL pour exposer un point unique d''API. La seconde solution, illustrée par le schéma de droite, est l''utilisation de webhooks.\n\n<img src="./images/buisness-logic.png" alt="Logique métier"/>\n\nLes webhooks sont sans doute plus faciles à mettre en place, car n''importe quelle API tierce peut prendre en charge la logique métier. Dans le cas du Schema Stitching, il faut forcément que la logique métier soit exposée elle aussi au travers d''une API GraphQL.\n\nLes performances sont aussi une question non négligeable. Hasura génère automatiquement les requêtes SQL, elles ne sont pas aussi optimisées que si nous le faisions manuellement. Je me questionne sur ce qu''il pourrait en être avec une base de données conséquente ou encore avec des liens complexes entre les tables.\n\n## Et les migrations ?\n\nComme je l''ai souligné un peu plus haut, je trouve que la mise en place des migrations n''est pas la partie la plus claire. Avant de vous expliquer comment procéder, il faut revenir sur ce que signifie ce terme dans Hasura.\n\nNous avons deux choses bien distinctes :\n\n- Les migrations de la base de données\n- Les migrations GraphQL (les metadata)\n\nSi vous avez déjà une base de données établie, vous devez avoir sûrement mis en place [knex.js](https://knexjs.org/) ou [db-migrate](https://db-migrate.readthedocs.io/en/latest/), dans ce cas vous pouvez passer à la partie Migrations GraphQL.\n\nPourquoi avoir une migration au niveau de GraphQL me direz-vous ? Tout simplement parce que Hasura ne sait pas à quel moment vous modifiez la base de données. L''outil doit mettre à jour les schémas et les resolvers GraphQL.\nOn peut soit utiliser le bouton "Untracked tables or views" qui se trouve dans la console Hasura, soit utiliser le cli (voir plus bas).\n\n<div class="tips">\n\nIl existe une série d''article sur le blog si vous voulez en savoir plus sur les [schémas](https://marmelab.com/blog/2017/09/05/dive-into-graphql-part-ii-anatomy-of-a-graphql-query.html#introspecting-a-graphql-server) et les [resolvers](https://marmelab.com/blog/2017/09/06/dive-into-graphql-part-iii-building-a-graphql-server-with-nodejs.html#writing-resolvers) GraphQL.\n\n</div>\n\n### Installation du CLI\n\nPour pouvoir utiliser les migrations, il faut installer le CLI d''Hasura. Pour ce faire, il existe deux façons.\n\nSi vous avez suivi l''installation par docker, vous devez sûrement utiliser l''image `hasura/graphql-engine:<version>`. Hasura propose une image docker qui contient le cli, on peut le trouver dans `/bin/hasura-cli`.\n\n```bash\nhasura/graphql-engine:<version>.cli-migrations\n```\n\nSinon vous pouvez installer simplement le cli sur votre machine, en suivant [la documentation d''installation du cli](https://docs.hasura.io/1.0/graphql/manual/hasura-cli/install-hasura-cli.html).\n\n### Les migrations postgres\n\nIl faut d''abord initialiser les migrations, ceci va créer un dossier migrations.\n\n```bash\nhasura init --directory migrations\n```\n\nEnsuite, vous pouvez constater qu''il existe plusieurs commandes pour appliquer, ajouter et supprimer des migrations.\n\n```bash\nhasura migrate apply\n\nhasura migrate create migration-title\n\nhasura migrate apply --down 1\n```\n\nLa création de migrations va générer quatre fichiers, deux fichiers `.sql` et deux `.yaml`. Je vous conseille de supprimer les fichiers `.yaml`. Ils me paraissent plus compliqués à utiliser que les fichiers `.sql`.\n\nOn trouve un fichier `*.up.sql` et `*.down.sql`. Quand nous allons appliquer la migration, le fichier `up.sql` va s''exécuter. Le fichier `down.sql` quant à lui, sert à revenir en arrière si besoin..\n\nAprès chaque création ou suppression de migration, il ne faut pas oublier de faire la commande `apply`.\n\n### Les migrations GraphQL\n\nDeux commandes sont à connaître.\n\n```bash\nhasura metadata export\n\nhasura metadata apply\n```\n\nL''export va créer un fichier `metadata.yaml`, il inclut toutes les informations dont a besoin Hasura pour générer l''API GraphQL : nom des tables et schémas de la base de données, les _remotes schema_ ainsi que les _custom functions_. Il faut lancer cette commande à chaque changement de base de données.\n\nLa commande `apply` va simplement appliquer les données du fichier `metadata.yaml`. Il n''est plus nécessaire de cliquer sur "Untracked tables or views".\n\n## TLDR\n\nCopiez/collez cet extrait de code dans votre Makefile, et les migrations seront bien plus faciles.\n\n```makefile\n##################\n## Hasura cli Commands\n##################\n\nHASURA_CLI = docker-compose exec graphql-engine sh -ci "\\n	cd heroes-migrations/migrations && /bin/hasura-cli\n\nmigration-init: ## init directory migrations\n	docker-compose exec graphql-engine sh -ci "cd heroes-migrations && /bin/hasura-cli init --directory migrations"\n\nmigration-apply: ## apply migration\n	$(HASURA_CLI) migrate apply"\n\nmigration-new: ## make migration-new MIGRATION_TITLE=whatever-title\n	$(HASURA_CLI) migrate create ${MIGRATION_TITLE}"\n\nmigration-down: ## make migration-down NB_MIGRATIONS=whatever-number\n	$(HASURA_CLI) migrate apply --down ${NB_MIGRATIONS}"\n\nmetadata-export: ## export metadata graphql\n	$(HASURA_CLI) metadata export"\n\nmetadata-apply: ## apply metadata graphql\n	$(HASURA_CLI) metadata apply"\n```\n\n_Je pars du principe que vous utilisez le cli Hasura dans docker, avec [docker compose](https://docs.hasura.io/1.0/graphql/manual/getting-started/docker-simple.html#step-1-get-the-docker-compose-file)_\n\nVous pouvez retrouver le projet d''exemple sur [github.com/zyhou/heroes-hasura-react](https://github.com/zyhou/heroes-hasura-react), un simple CRUD React avec [Apollo-client](https://www.apollographql.com/docs/react/) et Hasura en serveur GraphQL avec une base de données postgres.\n\n## Conclusion\n\nHasura fut pour moi une découverte intéressante. Il simplifie grandement la mise en place de GraphQL et gère de manière autonome la base de données. Dans l''ensemble, la documentation est claire, comme nous avons pu le voir la mise en place des migrations est plus compliqué qu''il n''y parait.\n\nL''utilisation du cli est intuitive, si vous avez déjà utilisé d''autre outils de migrations vous n''aurez aucun mal avec les commandes.\n\nSi vous avez entendu parler d''Hasura avant cet article, vous avez sûrement dû entendre parler de [Prisma](https://www.prisma.io/), ils ont également rédigé un article sur [Hasura vs Prisma](https://blog.hasura.io/hasura-vs-prisma-9ffc7271eda8/).\n\nIl y a de fortes chances que l''on parle de Prisma sur le blog, so stay tuned !\n\n','\n',char(10)),'Hasura est un serveur GraphQL pour PostgreSQL. Lorsque le modèle de données change, comment passer l''info à Hasura pour mettre à jour l''API?',1,1,'2021-01-22 10:56:45.296238','2021-01-22 10:56:45.296238');
INSERT INTO articles VALUES(10,'Agile Lean Ireland 2019: The Conference You Wish You Had Gone To','agile-lean-ireland-2019-the-conference-you-wish-you-had-gone-to-17zzbe',replace('I''m just out of Agile Lean Ireland, and I''m so excited that I wanna write down all my thoughts about this conference before they disappear in my Guinness.\n\n![Guiness truck](./images/guinnesstruck.jpg)\n\nThe conference took place in Dublin, in the awesome venue of Croke Park (see cover image).\n\nThere were so many different rooms that I lost count. But unlike most conference, tracks are not organized by rooms, [but by themes](https://www.agileleanireland.org/schedule/). I found it much more practical.\n\nOver 2 days, I had the chance to wander around all those tracks: Product Impact, Agile Testing, Agile Leadership, Making Teams Awesome, Software Craftsmanship, Agile HR, Kanban, Agile Coaching & Scrum Mastery.\n\nThere were also keynotes, with a lot of variety, and with amazing speakers.\n\nRead on to see what were the talks I took the most of.\n\n## Why Great Leaders Must Unlearn to Succeed in Today''s Exponential World\n\nIt all started with [Barry O''Reilly](https://twitter.com/barryoreilly). As with all keynotes, he''s such a good speaker that you would get passionate about whatever he''d talk about. But he introduced the concept of unlearning, and that''s fascinating.\n\n<Tweet id="1121342751935737856"/>\n\nTo me, his conference echoes [The Innovator''s Dilemma](/blog/2019/04/30/innovator-dilemma.html). Indeed, he explains that the hardest part of innovation and improvement is not to learn, but rather to unlearn outdated knowledge to make room for new knowledge. What works now won''t be what works tomorrow.\n\nHis conference was, I guess, an introduction to his new book, "Unlearn" - not too commercial though. I will probably read it and let you know what it''s about in depth later on.\n\n## Better Together: Product and Engineering\n\nNext was [Emily Tate](https://twitter.com/thedailyem). I loved her [talk](https://speakerdeck.com/thedailyem/better-together-product-and-engineering?slide=35). It described some kind of working agreement between product people and the dev team.\n\n<Tweet id="1121358422362984448"/>\n\nShe lists all of the things that she expects from her team, and how she can be helpful to them. She asks them to:\n\n- shorten the feedback loop by questionning everything\n- see completed stories before demos\n- let them help you advocate your technical choices\n- challenges her choices\n- ...\n\nHer recipe seems unbeatable, and it inspired me a lot to make everyone''s expectations clearer. I''m definitely going to make a workshop at Marmelab from it.\n\n## Friction: the Big Eight\n\n[Marry Poppendieck](https://twitter.com/mpoppendieck)''s talk was my favorite. I can''t explain why, but all the content she shares is always worth listening to. Beyond agile methodologies, she talked about reducing friction instead of becoming agile: isn''t it what we''re all aiming for?\n\nWith SpaceX failed landings as an illustration, she listed all the different kinds of friction that can happen.\n\n<Tweet id="1121749691165814784"/>\n\nI think knowing which issues slow you down is the first step to fixing them - some kind of self-awareness. This list is priceless, and will surely help me identify impediments easier when I feel that we''re slowing down and have no actual idea why.\n\n## The Culture That Lives\n\n[Geoff Watts](https://twitter.com/geoffcwatts) proposed to make us discover a part of what he calls Organic agility. Using Game of Thrones characters, he made us guess what kind of leadership they had, and what kind of leadership they should have had in order not to fail.\n\n<Tweet id="1121796154499321857"/>\n\nTo him, no leadership type is better than another. Failure just means it wasn''t the right leadership type for that case. Teams always expect something in particular, and it''s usually not what you think they expect. His tip is just to have a discussion in order to know what people expect from you.\n\n## Go Home or Go Big\n\n[Tim Herbig](https://twitter.com/herbigt) talked about remote work. After quickly listing the reasons to go remote and the many advantages, he gave tips on how companies can handle it properly.\n\n<Tweet id="1121396192586424320"/>\n\nThe two tips I liked the most:\n\n- "When one person is remote, everyone is remote", so that remote workers don''t feel excluded. He advises that if you''re in a meeting and one person works from somewhere else, then everyone should join the visio on their own laptop as if they were remote as well.\n- "The more emotional the communication is, the more synchronous it should be". A daily meeting can probably be just written asynchronously on slack, but a peer review, or a decision meeting, should at least be a visioconference.\n\nMight try some of those tips with our dear remote colleagues and see how it goes.\n\n## Deliberate Advice From an Accidental Career\n\n[Dan North](https://twitter.com/tastapod) started [his talk](https://speakerdeck.com/tastapod/deliberate-advice) by saying that unlike some people, his career wasn''t really planned and he just let things happen.\n\n<Tweet id="1121433585112834048"/>\n\nThrough fun stories (like dropping production database on his first job), he explained that he was lucky enough to always have had great managers. Each of his stories featured a quote from one of his former managers, and an explanation of why it was important for his career.\n\nMy favorite story is about that time he wrote the code he was so proud of, and showed it to his manager. What was his manager reply? *"Nice, is it live yet?"*\nIndeed, software that isn''t live can''t be used and thus is worthless.\n\n## Conclusion\n\nI had an amazing couple of days at the conference. It was very different from every other conference I''ve been to. The subjects are carefully chosen, and get away from traditional one-size-fits-all-methodology subjects.\n\nThe attendees were also a big part of the experience. I''ve never had someone explain to me so well what lean actually refers to (thanks Sergey!). Everyone had many ideas, everyone wanted to share their thoughts, and I even found someone who hadn''t seen a single episode of Game of Thrones!\n\nThe goodies bag were for once useful, actual books I will read instead of mugs and t-shirts I won''t ever use: [Unlearn](https://www.amazon.com/Unlearn-Success-Achieve-Extraordinary-Results-ebook/dp/B07HYBYBW7/ref=sr_1_2?crid=1A81FBGPLI8ZX&keywords=unlearn&qid=1556535320&s=books&sprefix=unlearn%2Cstripbooks-intl-ship%2C208&sr=1-2) from Barry O''Reilly, and [Flow](https://www.amazon.com/FLOW-Handbook-Mavericks-Innovation-Activists/dp/1527209857) from Fin Goulding & Haydn Shaughnessy.\n\nFor some time, I''ve felt something was wrong with agility and that its success denatured it, praising methodologies over its root values. Listening to all the subjects that were proposed made me feel better, I think we''re going in the right direction if we loosen up with ready-made recipes and insist on what really matters: Culture, Flow, Common Sense.\n\nLast but not least, the organizing team was very helpful and super nice. Everything happened so smoothly that it seemed like those guys have prepared conference all their lives. Thank you!\n\n<span style="font-size:8px;">\n    Note: I sometimes had a hard time understanding Irish accent as I''m not used to it. Guess I will have to go back next year to improve, hint hint François.\n</span>\n\n','\n',char(10)),'In the middle of Dublin, and with an impressive line-up of speakers, this agile conference was really worth the trip.',1,1,'2021-01-22 10:57:07.352690','2021-01-22 10:57:07.352690');
INSERT INTO articles VALUES(11,'Marmelab recrute en télétravail','marmelab-recrute-en-teletravail-gnnbm5',replace('Changement majeur dans l''organisation de Marmelab : à partir d''aujourd''hui, nous recrutons des collaborateurs y compris en télétravail. Cet article explique pourquoi nous avons changé d''avis et comment nous envisageons l''avenir.\n\n## Pourquoi nous ne pratiquions pas le télétravail \n\nMarmelab s''est créé à Nancy, et adresse des besoins de clients majoritairement parisiens. Le TGV nous permet de faire l''aller-retour pour voir nos clients dans la journée quand le besoin se fait sentir. Ce savant mélange de distance (qui permet d''éviter la course au salaire de Paris et le turnover qui l''accompagne) et de proximité (qui permet de voir le client en face-à-face pour créer de la confiance) est un des piliers de notre réussite.\n\nPar ailleurs, une grosse différence entre une ESN et Marmelab, c''est la culture : esprit d''équipe, bienveillance, créativité, pragmatisme, ces valeurs se cultivent et se partagent mieux en présentiel. L''ambiance nécessite elle aussi de passer du temps ensemble, ne serait-ce que pour progresser au baby-foot.\n\nEnfin, je suis personnellement inadapté au télétravail. Lorsque je travaille de chez moi, je ne sais pas m''arrêter, je délaisse mes obligations familiales, j''ai moins de concentration et d''organisation, et je m''agace de ne pouvoir joindre tel ou tel collaborateur. Et je sais que je ne suis pas le seul dans ce cas.\n\nC''est pour toutes ces raisons que nous avons refusé de recruter des collaborateurs en télétravail jusqu''ici. A deux exceptions près (Gildas et Alexis), qui sont deux cas particuliers.\n\n![Le bureau offre des moments de convivialité que le télétravail ne permet pas](./images/convivialite.jpg)\n\n## Pourquoi nous avons changé d''avis\n\nD''autres sociétés ne partagent pas nos réserves quant au télétravail. Aux US, où la pénurie de main-d''oeuvre tech est criante, un pas a été franchi il y a deux ans, avec une popularisation du Full Remote. Des sociétés de la Silicon Valley recrutent des développeurs jusqu''à Nancy. En deux ans, nous avons perdu 2 salariés qui ont suivi les sirènes de startups boostées à la *VC Money*, et qui paient deux fois mieux que nous. Impossible de s''aligner - la rentabilité en France n''est pas possible à ces niveaux de salaire. \n\nPar ailleurs, nous recevons toujours des candidatures spontanées de la France entière - et certaines sont excellentes. Des gens qui, eux, savent télétravailler, et qui nous apporteraient ce qui manque à notre équipe - notamment de la diversité.  \n\nEt puis la crise du COVID-19 et son confinement imposé nous ont forcés à télétravailler. Et ce n''était pas si terrible. Alors bien sûr, il a fallu réinventer des rituels pour remplacer ceux du bureau, améliorer nos équipements pour fluidifier la communication, et apprendre à nos clients à se passer de notre présence régulière. Mais comme eux aussi sont confinés, ils s''y sont fait. \n\nTout le monde n''aime pas le télétravail (moi, toujours pas), mais certains s''y sentent très bien, et surtout nous avons appris à collaborer avec des membres de l''équipes en télétravail. Donc, le télétravail, c''est possible ?\n\n![Home Alone](./images/home_office.jpg)\n\n## Conditions de télétravail\n\nNous avons décidé de permettre le télétravail.\n\nPour ceux qui sont à Nancy, cela veut dire une liberté totale de venir au bureau ou pas - tant qu''ils informent de leur présence un peu à l''avance. Le bureau reste ouvert, et il y aura toujours du monde, un frigo plein, une salle de détente conviviale et la possibilité de se parler sans demander la permission. \n\nPour ceux qui sont à distance, et qui disposent d''une pièce dédiée au travail, nous offrons des journées en coworking quand ils en ont besoin, le remboursement des frais de transport pour venir à Nancy à loisir, et une infrastructure de communication robuste. \n\nNous nous retrouverons tous ensemble tous les 2 mois, pour quelques jours de partage et de co-construction. Ces nouveaux rituels pourront prendre la forme d''un forum ouvert, d''un hack day ou simplement d''une journée de travail en commun. Nous rencontrerons également nos clients lors d''ateliers dédiées, moins fréquents que nos démos actuelles, mais plus axées sur la création de lien. \n\nUne limite importante : Marmelab est une société [sans avions](https://marmelab.com/fr/values) (pour des raisons de développement durable). Cela limite notre recrutement à un rayon d''une demi-journée en train autour de Paris ou Nancy. Nous ne pourrons donc collaborer avec des développeuses/eurs Brestois ou Toulousains - mais nous attendons de pied ferme les Lillois, Lyonnais, Rennais, Strasbourgeois, etc. Quant à la Côte d''Azur, nous faisons l''impasse pour l''instant - non pas à cause de la chocolatine, mais parce que la distance rend les déplacements coûteux pour l''environnement - même en train.\n\n![On se retrouve pour travailler ensemble](./images/collaborate.jpg)\n\n## C''est le moment de candidater\n\nMalgré la crise, nos clients maintiennent leurs projets, et de nouvelles opportunités voient le jour. Nous maintenons notre activité, et notre contribution à l''action publique, sans chômage partiel ni congés forcés. Nous sommes raisonnablement optimistes pour l''avenir, et nous recrutons dès aujourd''hui des développeuses/eurs expérimentés (voir [la fiche de poste](https://marmelab.com/fr/jobs)).\n\nÇa vous intéresse ? Rejoignez-nous !\n\n','\n',char(10)),'Le confinement nous a appris que nous savons collaborer en télétravail. Nous pouvons donc recruter partout en France !',1,1,'2021-01-22 10:57:32.301808','2021-01-22 10:57:32.301808');
INSERT INTO articles VALUES(12,'Using Firebase for Backend-as-a-Service: Pros and Cons','using-firebase-for-backend-as-a-service-pros-and-cons-1k6wbm',replace('During a recent customer project, we have faced with an important time constraint. As a consequence, we were forced to question the way we work without giving up features.\n\nUsually at Marmelab, our project setup (including continuous delivery, deployment and user management) approximately takes 4 man days. For this project, this would represent about 10% of all the time we had to achieve our objectives. Indeed, we had 1 month, i.e. 20 man days for two developers to complete the project.\n\nAs a result, in agreement with the customer, **we chose to use the Firebase platform to focus on the business logic**, without wasting our precious time on trivial tasks.\n\n## Firebase, What and Why?\n\nFirebase is a development platform which offers a large set of products and covers many needs. It is backed by Google, and trusted by many well-known companies like Shazam, The New York Time, or Alibaba.\n\n![Support companies](./images/supports.png)\n\nThe platform defines itself as a [RAD (Rapid Application Development)](https://en.wikipedia.org/wiki/Rapid_application_development) oriented platform, i.e. it allows to get rid of common app development challenges and **focus on features** and user experience.\n\nAmong the main features of Firebase, we were particularly interested in:\n\n- **Firestore**: Benefit from a cloud hosted, realtime and offline-first document database\n- **Cloud Functions**: Write custom backend code without managing and scaling your own servers\n- **Cloud Storage**: Cost-Effective File Storage in the cloud\n- **Authentication**: Manage users, signin, login and password recovering easily\n- **Hosting**: Simply upload our web assets and benefit from a CDN and SSL Secured web experience\n\nBecause of its large base of features, Firebase was the best suited solution according to our time constraints and our ambitious objectives. In the next chapters, we''ll describe in more detail the pros and cons of this technical choice.\n\n## What We Liked\n\nWhen we started developing the project, we were immediatly able to use the **extensive documentation** that Firebase offers. Moreover, Google highlights its platform through many videos on its [Youtube Channel](https://www.youtube.com/user/Firebase), which has 200K members. Everything is done to make the developer''s life easier, we can''t blame them for that.\n\n![Firebase Youtube Channel](./images/firebase-youtube.png)\n\nAs we expected, **project initialization using Firebase is very fast**. Indeed, on the very evening of the project launch, customers were able to create an account and login on the staging application. We were also able to set up the entire continuous integration chain on the same day using [Travis](https://travis-ci.org/).\n\nHosting configuration is very easy to take in hand. You just have to fill some keys of the `hosting` section of the `firebase.json` file.\n\n```json\n{\n  "hosting": {\n    "public": "build",\n    "ignore": [\n      "firebase.json",\n      "**/.*",\n      "**/node_modules/**"\n    ],\n    "rewrites": [\n      {\n        "source": "**",\n        "destination": "/index.html"\n      }\n    ]\n  }\n}\n```\n\nMoreover, Firebase allows to tweak numerous other options, allowing to create custom redirects from regex matchs, rewrite paths to *Cloud Functions*, configure custom cache control and headers, etc.\n\nIn the next few days, we got into the meat of *Firestore*, the successor of the legacy Firebase *Realtime Database* product, to store our data. Firestore is a **scalable**, **realtime** and **offline-first NoSQL database**, which allows to build fast applications regardless of the network connectivity latency.\n\nThe Firebase team did everything to ensure a smooth and fast user experience. So, **the logic is based entirely on subscriptions**. In our case, we used the [RxFire](https://firebase.googleblog.com/2018/09/introducing-rxfire-easy-async-firebase.html) library to link [RxJS](https://github.com/ReactiveX/rxjs) (the famous Reactive Extensions Library) to Firebase.\n\nAs a result, our code is incredibly clear and concise when associated with [ReactJS](https://reactjs.org/) hooks. Here is an example:\n\n```jsx\nimport React, { useState, useEffect } from ''react'';\nimport { collection } from ''rxfire/firestore'';\nimport firebase from ''firebase/app'';\nimport ''firebase/firestore'';\n\nconst app = firebase.initializeApp({\n  // ... config\n});\n\nconst createEventsObserver = userId => collection(\n  app.firestore().collection(''events'').where(`members.${userId}`, ''>'', '''')\n);\n\nconst Home = ({ user }) => {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const eventsObserver = createEventsObserver(user.uid).subscribe(setEvents);\n        return () => eventsObserver.unsubscribe();\n    }, []);\n\n  return (\n    <ul>\n      {events.map(event => (\n        <li key={event.id}>{event.name}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Home;\n```\n\nAs mentioned above, Firestore provides an **integrated offline mode** thanks to a synchronized **local database**. This also means that it is possible to benefit from [Optimistic Rendering](https://medium.com/@whosale/optimistic-and-pessimistic-ui-rendering-approaches-bc49d1298cc0) without any additional effort from the developer.\n\nFinally, thanks to *Cloud Functions*, we were able to develop custom code for the backend everytime we were blocked. We enjoyed this feature very much.\n\n## What We Didn''t like\n\nThe other side of the coin of this "turnkey" solution is that you are completely dependent on an ecosystem you can''t control: servers, SDK, data persistence... Not to mention that **this ecosystem is proprietary** and potentially expensive.\n\nThat''s a prerequisite that you must accept as soon as you decide to use Firebase. It''s the price to pay for the ease and speed of development that the solution offers. It''s therefore difficult to blame Firebase for it and to consider it as a negative point.\n\nBut beyond this question, several things displeased us during the development of the project.\n\n### The Requirement to Operate on a NoSQL Database\n\nAt Marmelab, we have adopted the habit of starting projects with a [PostgreSQL](https://www.postgresql.org/) database, among other things because it allows us to have a fairly flexible ["noSQL"](https://rob.conery.io/2018/07/05/a-pure-postgresql-document-database-api/) approach at the beginning of the project, and eventually switch to a relational approach if the project requires it. When starting a Firebase project, **you can only choose the NoSQL approach**, with its advantages and disadvantages.\n\n![You can''t go back](./images/cantgoback.jpg)\n\nSo we adapted. We used more and more lambdas. Firebase even offers helpful solutions for classical NoSQL difficulties, such as sub-collections, or exotic index management.\n\nThere was also a kind of *behavioural side effect* induced by the fact that the solution could become a paying solution. We have spent far too much time trying to avoid network calls or lambdas that are too specialized. Indeed, **the limitation of the free version and the pricing of the paid version are based on calls to the database** or the number of lambda executions. \n\nFrankly, *IDD (Invoice Driven Development)* is not a good development methodology.\n\n### The Complexity of Permissions Management\n\nAnother unpleasant point when using Firebase is the management of the permissions on the data stored there. First, this **permission management is based on a specific syntax** that is not always very easy to use.\n\nBut it is also restrictive since you have to manage and synchronize permissions from a separate file. It is also a problem for testing, as we will see later.\n\nHere is an example of rules from a `firestore.rules` file.\n\n```js\n// firestore.rules\n\nfunction isSignedIn() {\n  return request.auth != null;\n}\n\nfunction getEventRole(rsc) {\n  return rsc.data.members[request.auth.uid];\n}\n\nfunction isEventOwner(rsc) {\n  return getEventRole(rsc).matches("^owner[:](organiser|provider)$");\n}\n\nfunction isValidEvent(rsc) {\n  return rsc.data.title.size() < 60;\n}\n\nfunction isValidNewEvent() {\n  return resource == null\n    && isValidEvent(request.resource)\n    && isEventOwner(request.resource);\n}\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /users/{document=**} {\n    	allow read: if isSignedIn();\n    }\n    match /events/{document} {\n      allow write: if isValidNewEvent() || (isValidEvent(resource) && isEventOwner(resource));\n      allow read: if isSignedIn() && getEventRole(resource) != null;\n    }\n  }\n}\n```\n\nAs you see, the rule syntax can quickly become cumbersome and difficult to maintain. Fortunately, developers from the community have graciously developed [tools](https://github.com/bijoutrouvaille/fireward) to generate these awful rule files based on more legible code.\n\n### The "Real-Time" Architecture Is Difficult to Abstract\n\nOne of Firebase''s great strengths is its real-time capacity. It''s with this feature in mind that we implemented the web application, facilitated by `RxJS`.\n\n![Realtime Capabilities](./images/realtime.png)\n\nWe still had in mind the idea of limiting the dependency to Firebase as much as possible, so we did everything we could to remove the firebase SDK from the implementation of user interfaces. It has not always been easy. And it was perhaps futile: **the replacement of Firebase by another real-time technology (such as the use of websocket or GraphQL subscriptions) seems complicated** despite our desire to abstract Firebase...\n\n### It''s Hard to Test\n\nThis is one of the most negative points of the Firebase solution: the implementation of automated tests! Lambdas are JavaScript (or TypeScript) functions that, in theory, can easily be tested unitarily. But they must be sent to Google''s servers to be executed.\n\nTo be able to set up functional tests on the application, it is therefore necessary to reproduce the environment in which lambdas are executed within the continous integration. Even if Google provides Docker images to do this, we couldn''t get them to work in a reasonable amount of time - so our lambda functions could not be tested automatically.\n\nThe same problem arises for the implementation of automated functional tests for the management of rights on the database...\n\n### The Slowness of the Free Version\n\nOne lhe last point, less annoying than the others, but which caused us problems during the demonstrations: the **slowness of the free solution**. Indeed, the lambda of the free version is in cold-start, which has had a very negative impact on the demonstrations given to users. Nothing prohibitive, but it''s annoying when you have to justify the slowness of your application.\n\n## Conclusion\n\nDespite the negative points mentioned, **Firebase is in our opinion an excellent tool**. Being able to demo a basic application with user management and real time updates in less than a day is huge. And the development experience is much simpler and more enjoyable than many similar solutions like AWS Amplify.\n\nFor a side-project, a very simple project with few users, or for a throwaway POC, it''s an excellent solution, and very cheap because the free tier is generous.\n\nHowever, for long-term developemnt, we think it is much more problematic. First of all, if the solution is to be sustainable, **the economy of the boostrap days should not be significant**. Especially since the time saved in setting up the first interfaces could be lost when handling a complete continuous integration stack (unit and functional tests).\n\nSecondly, if the Firebase solution offers a highly scalable potential, **the costs incurred are very difficult to estimate**. It is therefore complicated to predict the cost of the solution in case of success, which does not facilitate the sustainability.\n\nHowever, the "real-time" architecture of the database and the implementation of a reactive architecture is a real discovery and a real good knowledge to put in your developer toolbox. This made us want to look at open-source alternatives such as [CouchDB](https://marmelab.com/blog/2019/09/25/couchdb_pouchdb_serious_firebase_alternative.html).\n','\n',char(10)),'Using Firebase for Backend-as-a-Service: Pros and Cons',3,1,'2021-01-22 10:58:02.330755','2021-01-22 10:58:02.330755');
CREATE TABLE IF NOT EXISTS "tags" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "taggings_count" integer DEFAULT 0);
INSERT INTO tags VALUES(1,'tutorial',1);
INSERT INTO tags VALUES(2,'linux',1);
INSERT INTO tags VALUES(3,'devops',1);
INSERT INTO tags VALUES(4,'vuejs',1);
INSERT INTO tags VALUES(5,'conference',1);
INSERT INTO tags VALUES(6,'react',1);
INSERT INTO tags VALUES(7,'ar',1);
INSERT INTO tags VALUES(8,'reference',1);
INSERT INTO tags VALUES(9,'tech4good',1);
INSERT INTO tags VALUES(10,'database',1);
INSERT INTO tags VALUES(11,'marmelab',1);
INSERT INTO tags VALUES(12,'welcome',1);
CREATE TABLE IF NOT EXISTS "taggings" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "tag_id" integer, "taggable_id" integer, "taggable_type" varchar, "tagger_id" integer, "tagger_type" varchar, "context" varchar(128), "created_at" datetime);
INSERT INTO taggings VALUES(1,1,4,'Article',NULL,NULL,'tags','2021-01-22 10:37:28.497336');
INSERT INTO taggings VALUES(2,2,4,'Article',NULL,NULL,'tags','2021-01-22 10:37:28.583699');
INSERT INTO taggings VALUES(3,3,3,'Article',NULL,NULL,'tags','2021-01-22 10:37:48.329292');
INSERT INTO taggings VALUES(4,4,5,'Article',NULL,NULL,'tags','2021-01-22 10:53:55.114967');
INSERT INTO taggings VALUES(5,5,5,'Article',NULL,NULL,'tags','2021-01-22 10:53:55.166121');
INSERT INTO taggings VALUES(6,6,6,'Article',NULL,NULL,'tags','2021-01-22 10:54:50.367063');
INSERT INTO taggings VALUES(7,7,6,'Article',NULL,NULL,'tags','2021-01-22 10:54:50.443982');
INSERT INTO taggings VALUES(8,8,7,'Article',NULL,NULL,'tags','2021-01-22 10:55:34.737488');
INSERT INTO taggings VALUES(9,9,7,'Article',NULL,NULL,'tags','2021-01-22 10:55:34.807275');
INSERT INTO taggings VALUES(10,10,9,'Article',NULL,NULL,'tags','2021-01-22 10:56:45.419516');
INSERT INTO taggings VALUES(11,11,11,'Article',NULL,NULL,'tags','2021-01-22 10:57:32.403420');
INSERT INTO taggings VALUES(12,12,11,'Article',NULL,NULL,'tags','2021-01-22 10:57:32.452014');
CREATE TABLE IF NOT EXISTS "favorites" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "article_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
INSERT INTO favorites VALUES(1,1,12,'2021-01-22 10:59:33.920354','2021-01-22 10:59:33.920354');
INSERT INTO favorites VALUES(2,1,11,'2021-01-22 10:59:35.421473','2021-01-22 10:59:35.421473');
INSERT INTO favorites VALUES(3,1,10,'2021-01-22 10:59:36.819147','2021-01-22 10:59:36.819147');
INSERT INTO favorites VALUES(4,1,9,'2021-01-22 10:59:43.024129','2021-01-22 10:59:43.024129');
INSERT INTO favorites VALUES(5,1,8,'2021-01-22 10:59:44.952595','2021-01-22 10:59:44.952595');
INSERT INTO favorites VALUES(6,1,7,'2021-01-22 10:59:46.547361','2021-01-22 10:59:46.547361');
INSERT INTO favorites VALUES(7,7,12,'2021-01-22 11:01:27.213793','2021-01-22 11:01:27.213793');
INSERT INTO favorites VALUES(8,2,12,'2021-01-22 11:02:39.759454','2021-01-22 11:02:39.759454');
CREATE TABLE IF NOT EXISTS "comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "body" text, "user_id" integer, "article_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
INSERT INTO comments VALUES(1,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',7,12,'2021-01-22 11:09:43.081733','2021-01-22 11:09:43.081733');
INSERT INTO comments VALUES(2,'Oui, mais avec Java?',7,12,'2021-01-22 11:09:56.185416','2021-01-22 11:09:56.185416');
INSERT INTO comments VALUES(3,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',7,11,'2021-01-22 11:10:21.157343','2021-01-22 11:10:21.157343');
INSERT INTO comments VALUES(4,replace('Oui, tousser c''est mal, d''accord avec Thiery\n','\n',char(10)),7,11,'2021-01-22 11:10:30.242057','2021-01-22 11:10:30.242057');
INSERT INTO comments VALUES(5,replace('Même en java?\n','\n',char(10)),7,11,'2021-01-22 11:10:36.463472','2021-01-22 11:10:36.463472');
INSERT INTO comments VALUES(6,replace('Oui, mais avec Java?\n','\n',char(10)),7,10,'2021-01-22 11:11:01.537308','2021-01-22 11:11:01.537308');
INSERT INTO comments VALUES(7,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',7,10,'2021-01-22 11:11:12.326781','2021-01-22 11:11:12.326781');
INSERT INTO comments VALUES(8,replace('Firebase is fire 🔥🔥🔥🔥 🚒🚒🚒\n','\n',char(10)),2,12,'2021-01-22 11:12:50.670918','2021-01-22 11:12:50.670918');
INSERT INTO comments VALUES(9,replace('Firebase = Google Google is bad\n','\n',char(10)),2,12,'2021-01-22 11:12:58.205888','2021-01-22 11:12:58.205888');
INSERT INTO comments VALUES(10,replace('J''aime pas !\n','\n',char(10)),2,11,'2021-01-22 11:13:25.213372','2021-01-22 11:13:25.213372');
INSERT INTO comments VALUES(11,'Here''s another good article about migration : https://en.wikipedia.org/wiki/Bird_migration#:~:text=Bay%2C%20Western%20Australia-,Migration%20is%20the%20regular%20seasonal%20movement%2C%20often%20north%20and%20south,by%20many%20species%20of%20birds.&text=Non%2Dmigratory%20birds%20are%20said,long%20distances%20along%20a%20flyway.',2,10,'2021-01-22 11:13:55.923226','2021-01-22 11:13:55.923226');
INSERT INTO comments VALUES(12,replace('Oui mais Amazon c''est mal\n','\n',char(10)),2,10,'2021-01-22 11:14:02.174984','2021-01-22 11:14:02.174984');
INSERT INTO comments VALUES(13,replace('CouchDb seems couchy ...\n','\n',char(10)),2,8,'2021-01-22 11:14:31.729109','2021-01-22 11:14:31.729109');
INSERT INTO comments VALUES(14,replace('React-native is facebook. Facebook c''est mal.\n','\n',char(10)),2,7,'2021-01-22 11:14:56.761866','2021-01-22 11:14:56.761866');
INSERT INTO comments VALUES(15,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem. Now nobody is reading anymore, I''m nostalgic too... 🍆🍆💔',2,7,'2021-01-22 11:15:10.982563','2021-01-22 11:15:10.982563');
INSERT INTO comments VALUES(16,replace('Vue c''est alibaba non ? Alibaba c''est mal, même si c''est un peu communiste.\n','\n',char(10)),2,7,'2021-01-22 11:15:18.438389','2021-01-22 11:15:18.438389');
INSERT INTO comments VALUES(17,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,11,'2021-01-22 11:16:28.288771','2021-01-22 11:16:28.288771');
INSERT INTO comments VALUES(18,replace('Le télétravail c''est vraiment bien quand on tousse\n','\n',char(10)),6,11,'2021-01-22 11:16:32.842177','2021-01-22 11:16:32.842177');
INSERT INTO comments VALUES(19,replace('Le télétravail c''est vraiment bien quand on tousse\n','\n',char(10)),6,11,'2021-01-22 11:16:33.879488','2021-01-22 11:16:33.879488');
INSERT INTO comments VALUES(20,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,10,'2021-01-22 11:16:52.161371','2021-01-22 11:16:52.161371');
INSERT INTO comments VALUES(21,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,10,'2021-01-22 11:17:00.604124','2021-01-22 11:17:00.604124');
INSERT INTO comments VALUES(22,replace('I rather play relational databases\n','\n',char(10)),6,7,'2021-01-22 11:17:22.936077','2021-01-22 11:17:22.936077');
INSERT INTO comments VALUES(23,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,7,'2021-01-22 11:17:27.635061','2021-01-22 11:17:27.635061');
INSERT INTO comments VALUES(24,replace('Non vraiment, vous avez lu mon article d''intégration?\n','\n',char(10)),6,7,'2021-01-22 11:17:32.963035','2021-01-22 11:17:32.963035');
INSERT INTO comments VALUES(25,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,6,'2021-01-22 11:17:50.287531','2021-01-22 11:17:50.287531');
INSERT INTO comments VALUES(26,replace('AR is the future, VR is so "has been"\n','\n',char(10)),6,6,'2021-01-22 11:17:55.248857','2021-01-22 11:17:55.248857');
INSERT INTO comments VALUES(27,replace('Too nostalgic about that 14th of february\n','\n',char(10)),6,4,'2021-01-22 11:18:18.678565','2021-01-22 11:18:18.678565');
INSERT INTO comments VALUES(28,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,4,'2021-01-22 11:18:24.973178','2021-01-22 11:18:24.973178');
INSERT INTO comments VALUES(29,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,4,'2021-01-22 11:18:49.869609','2021-01-22 11:18:49.869609');
INSERT INTO comments VALUES(30,replace('Hey vous avez lu mon article d''intégration?Thiery, c''est pour cette musique que je suis parti à Nantes tu sais\n','\n',char(10)),6,4,'2021-01-22 11:18:55.409652','2021-01-22 11:18:55.409652');
INSERT INTO comments VALUES(31,replace('A propos de snap : https://www.youtube.com/watch?v=nTvstJCe44o\n','\n',char(10)),6,4,'2021-01-22 11:19:00.716503','2021-01-22 11:19:00.716503');
INSERT INTO comments VALUES(32,'Oui, mais avec Java? Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',6,4,'2021-01-22 11:19:08.963344','2021-01-22 11:19:08.963344');
INSERT INTO comments VALUES(33,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',6,3,'2021-01-22 11:19:39.338898','2021-01-22 11:19:39.338898');
INSERT INTO comments VALUES(34,'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas venenatis, dolor eu feugiat porta, nunc urna tempor diam, ac tincidunt nisl mauris id dolor. Aenean venenatis posuere est, porttitor tristique orci. Suspendisse interdum lacinia nunc eget faucibus. Suspendisse et rhoncus orci. Donec ultrices magna a sem pretium, ac feugiat orci hendrerit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed sed egestas tellus, at feugiat lorem. Etiam eget nunc quis tortor viverra egestas eget eu ante. Suspendisse quis ex dapibus nunc dictum cursus. Nulla facilisi. Donec bibendum dolor ex, eu convallis odio sagittis at. In auctor condimentum nunc, id tincidunt erat interdum a. Quisque vitae commodo purus. Sed rhoncus odio a sapien condimentum, vel condimentum diam convallis. Nullam a varius elit. Morbi quis nibh magna. Nullam suscipit laoreet sapien non malesuada. Nunc a neque feugiat, vulputate lectus eu, fermentum turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aliquam tellus metus, viverra eu consequat id, volutpat nec sapien. Donec bibendum laoreet sapien, non pulvinar eros rutrum sit amet. Pellentesque in elit finibus, lobortis elit id, ullamcorper massa. Maecenas tempus rhoncus neque quis dictum. Nulla eu tincidunt tellus. Duis id efficitur ante. Aenean libero nisl, dapibus quis rhoncus vitae, dapibus a ligula. Donec ut suscipit augue. Proin lacinia tellus eget pharetra venenatis. In fringilla sem turpis, id volutpat lorem auctor ac. Integer vel purus erat. Morbi quis vehicula enim. Cras interdum libero nec rhoncus tempus. Aliquam cursus vulputate elit, eu accumsan nulla pellentesque eget. Nullam gravida, dui vel posuere aliquet, metus lacus sagittis nunc, at efficitur mi nulla nec libero. Morbi eget lectus et sapien gravida efficitur et at turpis. Mauris laoreet eget diam nec tempor. Sed maximus ex non porta tempor. Morbi convallis mi eu mi convallis ornare eu ac libero. Nunc vehicula sapien vel nisl convallis iaculis. Fusce a nisi ligula. Proin consectetur consectetur luctus. In non molestie nunc. Nulla tempus lorem vitae risus vestibulum, et efficitur diam fermentum. Morbi lacus felis, suscipit et elementum ut, posuere a elit. Proin ante felis, elementum tincidunt tempus iaculis, tincidunt quis erat. Nullam pellentesque nunc ligula, maximus imperdiet arcu lacinia convallis. Proin tempor porttitor arcu, vel consectetur dui ullamcorper consectetur. Curabitur consequat magna non nisl tempor imperdiet. Donec vitae mi ut ante vulputate faucibus vel ac lectus. Integer in feugiat nunc, quis rutrum elit. Suspendisse sed magna eget lectus tincidunt vehicula a sed ex. Cras commodo tempor quam, ut tristique tortor facilisis in. Aliquam eget porttitor nunc, vitae finibus lorem. Morbi lacus urna, egestas ut velit sit amet, feugiat tincidunt eros. Quisque egestas ligula molestie tortor ultricies gravida. Vivamus finibus consectetur rhoncus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in interdum magna, vitae sodales lorem.',6,3,'2021-01-22 11:19:41.555511','2021-01-22 11:19:41.555511');
INSERT INTO comments VALUES(35,replace('Hey vous avez lu mon article d''intégration?\n','\n',char(10)),6,3,'2021-01-22 11:19:50.892890','2021-01-22 11:19:50.892890');
INSERT INTO comments VALUES(36,replace('Vends des Kévin Maschtalek de poche, offre de départ à 20 balles, faire offre\n','\n',char(10)),6,3,'2021-01-22 11:19:56.791754','2021-01-22 11:19:56.791754');
INSERT INTO comments VALUES(37,'Coool',6,3,'2021-01-22 11:20:03.640547','2021-01-22 11:20:03.640547');
INSERT INTO comments VALUES(38,replace('Des bonnes idées\n','\n',char(10)),6,3,'2021-01-22 11:20:08.654432','2021-01-22 11:20:08.654432');
INSERT INTO comments VALUES(39,replace('Je reviens ici toutes les 2 semaines en moyenne !\n','\n',char(10)),6,3,'2021-01-22 11:20:15.147090','2021-01-22 11:20:15.147090');
INSERT INTO comments VALUES(40,replace('Ici : https://marmelab.com/fr/jobs/\n','\n',char(10)),1,11,'2021-01-22 11:20:49.663916','2021-01-22 11:20:49.663916');
INSERT INTO comments VALUES(41,replace('Super, on postule où ?\n','\n',char(10)),1,11,'2021-01-22 11:20:54.142190','2021-01-22 11:20:54.142190');
INSERT INTO comments VALUES(42,replace('Génial le tutoriel, je ne savais pas comment faire et c''est pas documenté "de ouf"\n','\n',char(10)),1,9,'2021-01-22 11:21:08.253046','2021-01-22 11:21:08.253046');
INSERT INTO comments VALUES(43,replace('Ca à l''air assez galère couchdb en fait...\n','\n',char(10)),1,8,'2021-01-22 11:21:22.546719','2021-01-22 11:21:22.546719');
INSERT INTO comments VALUES(44,replace('Super article, mon ordi vient de planter !\n','\n',char(10)),1,3,'2021-01-22 11:21:51.680363','2021-01-22 11:21:51.680363');
CREATE TABLE IF NOT EXISTS "follows" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "followable_id" integer NOT NULL, "followable_type" varchar NOT NULL, "follower_id" integer NOT NULL, "follower_type" varchar NOT NULL, "blocked" boolean DEFAULT 'f' NOT NULL, "created_at" datetime, "updated_at" datetime);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('users',7);
INSERT INTO sqlite_sequence VALUES('articles',12);
INSERT INTO sqlite_sequence VALUES('tags',12);
INSERT INTO sqlite_sequence VALUES('taggings',12);
INSERT INTO sqlite_sequence VALUES('favorites',8);
INSERT INTO sqlite_sequence VALUES('comments',44);
CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version");
CREATE UNIQUE INDEX "index_users_on_email" ON "users" ("email");
CREATE UNIQUE INDEX "index_users_on_reset_password_token" ON "users" ("reset_password_token");
CREATE UNIQUE INDEX "index_users_on_username" ON "users" ("username");
CREATE INDEX "index_articles_on_user_id" ON "articles" ("user_id");
CREATE UNIQUE INDEX "index_articles_on_slug" ON "articles" ("slug");
CREATE UNIQUE INDEX "index_tags_on_name" ON "tags" ("name");
CREATE UNIQUE INDEX "taggings_idx" ON "taggings" ("tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type");
CREATE INDEX "index_taggings_on_taggable_id_and_taggable_type_and_context" ON "taggings" ("taggable_id", "taggable_type", "context");
CREATE INDEX "index_favorites_on_user_id" ON "favorites" ("user_id");
CREATE INDEX "index_favorites_on_article_id" ON "favorites" ("article_id");
CREATE INDEX "index_comments_on_user_id" ON "comments" ("user_id");
CREATE INDEX "index_comments_on_article_id" ON "comments" ("article_id");
CREATE INDEX "fk_follows" ON "follows" ("follower_id", "follower_type");
CREATE INDEX "fk_followables" ON "follows" ("followable_id", "followable_type");
COMMIT;
